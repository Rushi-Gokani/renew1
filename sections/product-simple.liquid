{% comment %}
  Simple Product Section
  A basic, reliable product display
{% endcomment %}

<div class="page-width product-simple-section">
  <div class="product-simple-grid">
    <!-- Product Images -->
    <div class="product-simple-media">
      <div class="slider-container">
        <div class="main-slider">
          {% for image in product.images %}
            <div class="slide {% if forloop.first %}active{% endif %}" data-slide-index="{{ forloop.index0 }}">
              <img src="{{ image | image_url: width: 800 }}"
                   alt="{{ product.title | escape }} - Image {{ forloop.index }}"
                   loading="{% if forloop.first %}eager{% else %}lazy{% endif %}">
            </div>
          {% endfor %}
        </div>

        {% if product.images.size > 1 %}
          <button class="slider-nav prev" onclick="changeSlide(-1)" aria-label="Previous image">‹</button>
          <button class="slider-nav next" onclick="changeSlide(1)" aria-label="Next image">›</button>
        {% endif %}
      </div>

      {%- comment -%} Thumbnails removed by request {%- endcomment -%}

      {%- assign feature_card_count = 0 -%}
      {%- for b in section.blocks -%}
        {%- if b.type == 'feature_card' -%}
          {%- assign feature_card_count = feature_card_count | plus: 1 -%}
        {%- endif -%}
      {%- endfor -%}
      {% if feature_card_count > 0 %}
        <div class="media-feature-cards">
          {% assign rendered = 0 %}
          {% for b in section.blocks %}
            {% if b.type == 'feature_card' %}
              {% assign rendered = rendered | plus: 1 %}
              {% if rendered <= 3 %}
                <div class="feature-card">
                  <div class="feature-card-inner">
                    {% if b.settings.icon != blank %}
                      <img class="feature-card-icon" src="{{ b.settings.icon | image_url: width: 96 }}" alt="{{ b.settings.icon_alt | escape }}" loading="lazy">
                    {% endif %}
                    {% if b.settings.title != blank %}
                      <div class="feature-card-title">{{ b.settings.title }}</div>
                    {% endif %}
                    {% if b.settings.subtitle != blank %}
                      <div class="feature-card-sub">{{ b.settings.subtitle }}</div>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
            {% endif %}
          {% endfor %}
        </div>
      {% endif %}

      {%- assign have_blog_images = false -%}
      {%- for b in section.blocks -%}
        {%- if b.type == 'blog_image' -%}{%- assign have_blog_images = true -%}{%- break -%}{%- endif -%}
      {%- endfor -%}
      {% if have_blog_images %}
        <div class="media-blog-grid">
          {% assign count = 0 %}
          {% for b in section.blocks %}
            {% if b.type == 'blog_image' %}
              {% assign count = count | plus: 1 %}
              {% if count <= 4 %}
                {% if b.settings.link != blank %}<a href="{{ b.settings.link }}" class="media-blog-item">{% else %}<div class="media-blog-item">{% endif %}
                  {% if b.settings.image != blank %}
                    <img src="{{ b.settings.image | image_url: width: 800 }}" alt="{{ b.settings.alt | default: product.title | escape }}" loading="lazy">
                  {% else %}
                    <div class="media-blog-placeholder"></div>
                  {% endif %}
                {% if b.settings.link != blank %}</a>{% else %}</div>{% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
        </div>
      {% endif %}
      {%- comment -%}
        Render press logo placeholders for JS to pick up and draw a row between
        media and grid, while keeping markup clean and optional.
      {%- endcomment -%}
      {% for b in section.blocks %}
        {% if b.type == 'press_logo' and b.settings.image != blank %}
          <span class="__press_logo" data-src="{{ b.settings.image | image_url: width: 200 }}" data-alt="{{ b.settings.alt | escape }}"></span>
        {% endif %}
      {% endfor %}
    </div>

    <!-- Product Information -->
    <div class="product-simple-info">
      <div class="product-meta">
        <div class="rating-and-count">
          <div class="stars" aria-hidden="true">★★★★★</div>
          {% assign rating_line = section.settings.rating_text | default: 'Join 300,000+ Happy Women' %}
          <a class="reviews-link" href="#shopify-product-reviews" aria-label="Read reviews">{{ rating_line }}</a>
        </div>
        <h1 class="product-title">{{ product.title }}</h1>
        <div class="feature-badges">
          {% for b in section.blocks %}
            {% if b.type == 'badge' %}
              <span class="badge">{{ b.settings.text }}</span>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      <div class="product-price">
        <span class="price" data-price="{{ product.selected_or_first_available_variant.price }}">{{ product.selected_or_first_available_variant.price | money }}</span>
        {% if section.settings.price_note != blank %}
          <span class="price-note">{{ section.settings.price_note }}</span>
        {% endif %}
        {% assign cap = product.selected_or_first_available_variant.compare_at_price %}
        {% if cap and cap > product.selected_or_first_available_variant.price %}
          <span class="compare-price" data-compare="{{ cap }}">{{ cap | money }}</span>
        {% endif %}
      </div>

      {% if section.settings.excerpt != blank %}
        <div class="product-description excerpt">{{ section.settings.excerpt }}</div>
      {% elsif product.description != blank %}
        <div class="product-description excerpt">{{ product.description | strip_html | truncate: 240 }}</div>
      {% endif %}

      <!-- Add to Cart Form -->
      <form action="{{ routes.cart_add_url }}" method="post" class="product-form" enctype="multipart/form-data">
        {% if product.has_only_default_variant %}
          <input type="hidden" name="id" value="{{ product.first_available_variant.id }}">
        {% else %}
          <div class="variant-selector">
            <div class="selector-label">{{ section.settings.variant_label | default: 'Choose your flavour' }}</div>
            <div class="variant-pills" role="radiogroup" aria-label="Choose your flavour">
              {% for v in product.variants %}
                {% assign img = v.featured_image | default: product.featured_image %}
                <button type="button"
                        class="variant-pill {% if v == product.selected_or_first_available_variant %}active{% endif %}"
                        role="radio"
                        aria-checked="{% if v == product.selected_or_first_available_variant %}true{% else %}false{% endif %}"
                        data-variant-id="{{ v.id }}"
                        data-price="{{ v.price }}"
                        data-compare="{{ v.compare_at_price }}"
                        {% unless v.available %}disabled aria-disabled="true"{% endunless %}>
                  {% if img %}
                    <img src="{{ img | image_url: width: 64 }}" alt="{{ v.title | escape }}">
                  {% endif %}
                  <span class="variant-pill-text">{{ v.title }}</span>
                </button>
              {% endfor %}
            </div>
            <!-- Keep a native select for form compatibility and accessibility -->
            <select name="id" id="productVariant" class="sr-only-hidden">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}" {% if variant == product.selected_or_first_available_variant %}selected{% endif %} {% unless variant.available %}disabled{% endunless %}>{{ variant.title }}</option>
              {% endfor %}
            </select>
          </div>
        {% endif %}

        {% if product.selling_plan_groups.size > 0 and section.settings.enable_subscription %}
          {% assign group = product.selling_plan_groups | first %}
          {% assign first_plan = group.selling_plans | first %}
          <div class="purchase-options" data-has-subscription data-first-plan-id="{{ first_plan.id }}">
            <div class="option-card onetime">
              <label class="option-row">
                <input type="radio" name="purchase_option" value="onetime" checked>
                <div class="option-content">
                  <div class="option-title">{{ section.settings.onetime_label | default: 'One-time purchase' }}</div>
                  <div class="option-price"><span class="onetime-price">{{ product.selected_or_first_available_variant.price | money }}</span></div>
                </div>
                <span class="option-indicator" aria-hidden="true"></span>
              </label>
            </div>
            <div class="option-card">
              <label class="option-row">
                <input type="radio" name="purchase_option" value="subscription">
                <div class="option-content">
                  <div class="option-title">{{ section.settings.subscription_label | default: 'Subscribe and save' }}</div>
                  <div class="option-subcopy">{{ section.settings.subscription_subcopy | default: 'Save 20% + FREE gift' }}</div>
                  <div class="option-price"><span class="subscription-price" data-discount="{{ first_plan.price_adjustments | first | map: 'value' | first }}">{{ product.selected_or_first_available_variant.price | money }}</span></div>
                </div>
                <span class="option-indicator" aria-hidden="true"></span>
              </label>
              <input type="hidden" name="selling_plan" id="selling_plan_input" value="">
            </div>
            {% assign has_benefits = false %}
            {% for b in section.blocks %}
              {% if b.type == 'benefit' %}{% assign has_benefits = true %}{% break %}{% endif %}
            {% endfor %}
            <ul class="benefits">
              {% if has_benefits %}
                {% for b in section.blocks %}
                  {% if b.type == 'benefit' %}<li>{{ b.settings.text }}</li>{% endif %}
                {% endfor %}
              {% else %}
                <li>Free gift on first order</li>
                <li>20% off every month</li>
                <li>Free Shipping on first subscription purchase</li>
                <li>Edit or cancel anytime</li>
                <li>Delivery every 4 weeks</li>
              {% endif %}
            </ul>
          </div>
        {% endif %}

        <div class="quantity-selector">
          <label for="quantity">Quantity:</label>
          <div class="quantity-wrapper">
            <button type="button" class="quantity-btn minus" aria-label="Decrease quantity">
              <span class="quantity-icon">−</span>
            </button>
            <div class="quantity-input-wrapper">
              <input type="number" name="quantity" id="quantity" class="quantity-input" value="1" min="1" max="99">
              <div class="quantity-bubble">
                <span class="quantity-bubble-value">1</span>
                <svg class="quantity-bubble-arrow" width="10" height="6" viewBox="0 0 10 6">
                  <polygon points="5,6 0,0 10,0" fill="currentColor"/>
                </svg>
              </div>
            </div>
            <button type="button" class="quantity-btn plus" aria-label="Increase quantity">
              <span class="quantity-icon">+</span>
            </button>
          </div>
     
        </div>

        <button type="submit" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
          {% if product.available %}
            {{ section.settings.cta_label | default: 'Buy Now ⚡' }}
          {% else %}
            Sold Out
          {% endif %}
        </button>
      </form>

      <!-- Product Accordions -->
      <div class="product-accordions">
        {% if section.settings.accordion_1_title != blank %}
          <div class="accordion-item active">
            <button class="accordion-header" type="button" aria-expanded="true">
              <span class="accordion-title">{{ section.settings.accordion_1_title }}</span>
              <span class="accordion-icon">+</span>
            </button>
            <div class="accordion-content" style="max-height: 500px;">
              <div class="accordion-body">
                {% if section.settings.accordion_1_content != blank %}
                  {{ section.settings.accordion_1_content }}
                {% else %}
                  <p>{{ section.settings.accordion_1_text }}</p>
                {% endif %}
              </div>
            </div>
          </div>
        {% endif %}

        {% if section.settings.accordion_2_title != blank %}
          <div class="accordion-item">
            <button class="accordion-header" type="button" aria-expanded="false">
              <span class="accordion-title">{{ section.settings.accordion_2_title }}</span>
              <span class="accordion-icon">+</span>
            </button>
            <div class="accordion-content">
              <div class="accordion-body">
                {% if section.settings.accordion_2_content != blank %}
                  {{ section.settings.accordion_2_content }}
                {% else %}
                  <p>{{ section.settings.accordion_2_text }}</p>
                {% endif %}
              </div>
            </div>
          </div>
        {% endif %}

        {% if section.settings.accordion_3_title != blank %}
          <div class="accordion-item link-only">
            <button class="accordion-header" type="button" aria-expanded="false" data-scroll-target="{{ section.settings.accordion_3_target_id | escape }}">
              <span class="accordion-title">{{ section.settings.accordion_3_title }}</span>
              <span class="accordion-icon">+</span>
            </button>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
  .product-simple-section {
    padding: 40px 20px;
    /* Prevent horizontal overflow on small screens */
    overflow-x: hidden;
  }

  .product-simple-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
  }

  /* Prevent grid children from causing horizontal overflow */
  .product-simple-media,
  .product-simple-info {
    min-width: 0;
  }

  @media (max-width: 768px) {
    .product-simple-grid {
      grid-template-columns: 1fr;
      gap: 30px;
    }
    .product-simple-media,
    .product-simple-info,
    .slider-container,
    .main-slider {
      max-width: 100%;
    }
    /* Ensure all children respect container width on mobile */
    .product-simple-section *,
    .product-simple-section *::before,
    .product-simple-section *::after {
      box-sizing: border-box;
      max-width: 100%;
    }
    .product-simple-section img {
      max-width: 100%;
      height: auto;
    }
    .thumbnail-list {
      -webkit-overflow-scrolling: touch;
      overflow-x: hidden;
      flex-wrap: wrap;
      row-gap: 10px;
      column-gap: 10px;
      padding: 10px 0 0 0;
      max-width: 100%;
    }
    .thumbnail {
      width: 64px;
      height: 64px;
      flex: 0 0 64px;
    }
    /* Quantity row should wrap to avoid overflow */
    .quantity-selector {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 10px;
    }
    .quantity-wrapper {
      flex: 1 1 auto;
      min-width: 0;
    }
    .stock-indicator {
      margin-left: 0;
    }

    /* Mobile: place quantity and add-to-cart side by side */
    .product-form {
      display: grid;
      grid-template-columns: minmax(120px, 160px) 1fr;
      gap: 12px;
      align-items: center;
    }
    .quantity-selector {
      margin-bottom: 0;
    }
    .quantity-selector label {
      display: none;
    }
    .quantity-wrapper {
      width: 100%;
      justify-content: space-between;
      gap: 0;
      border: 1px solid #000;
      border-radius: 6px;
      padding: 0 6px;
      background: #fff;
      min-height: 44px;
    }
    .quantity-btn {
      width: 32px;
      height: 32px;
      font-size: 18px;
      box-shadow: none;
    }
    .quantity-input-wrapper {
      flex: 1 1 auto;
      min-width: 0;
      max-width: none;
      padding: 0 8px;
      border-radius: 0;
      background: transparent;
    }
    .quantity-input {
      width: 40px;
      height: 32px;
      font-size: 16px;
    }
    .quantity-bubble {
      display: none;
    }
    .add-to-cart-btn {
      width: 100%;
      height: 44px;
    }
    .stock-indicator {
      display: none;
    }
  }

  /* Slider Styles */
  .slider-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    background: #f5f5f5;
    border-radius: 8px;
  }

  .main-slider {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slide.active {
    opacity: 1;
  }

  .slide img {
    width: 100%;
    object-fit: contain;
  }

  /* Navigation Buttons */
  .slider-nav {
   position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.5);
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 19%;
    font-size: 28px;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .slider-nav:hover {
    background: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .slider-nav.prev {
    left: 20px;
  }

  .slider-nav.next {
    right: 20px;
  }

  /* Thumbnail Styles */
  .thumbnail-list {
    display: none; /* hidden per request */
  }

  /* Optional press logos row */
  .press-logos { display:flex; gap:28px; align-items:center; opacity:.7; margin:18px 0; flex-wrap:wrap; }
  .press-logos img { height: 18px; width:auto; object-fit:contain; filter: grayscale(100%); }

  .thumbnail-list::-webkit-scrollbar {
    height: 6px;
  }

  .thumbnail-list::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  /* Blog image grid under media */
  .media-blog-grid { display:grid; grid-template-columns: 1fr 1fr; gap: 16px; margin-top: 16px; }
  .media-blog-item, .media-blog-placeholder { position: relative; width: 100%; padding-top: 100%; border-radius: 8px; overflow: hidden; background:#f2f2f2; display:block; }
  .media-blog-item img { position:absolute; top:0; left:0; width:100%; height:100%; object-fit: cover; }

  /* Feature cards stack (replaces thumbnails) */
  .media-feature-cards { display:flex; grid-template-columns: 1fr; gap: 14px; margin-top: 16px; }
  .feature-card { border-radius: 10px; background:#79a450; color:white; }
  .feature-card-inner { display:flex; flex-direction:column; align-items:center; justify-content:center; text-align:center; padding: 16px 12px; min-height: 120px; }
  .feature-card-icon { width: 40px; height: 40px; object-fit: contain; margin-bottom: 10px; }
  .feature-card-title { font-weight:700; font-size: 16px; line-height: 1.2; }
  .feature-card-sub { font-size: 13px; font-weight:600; margin-top: 4px; }

  .thumbnail {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 4px;
    overflow: hidden;
    transition: all 0.3s;
    box-sizing: border-box;
  }

  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .thumbnail:hover {
    transform: scale(1.05);
  }

  .thumbnail.active {
    border-color: #000;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  /* Product Info Styles */
  .product-title {
    font-size: 36px;
    margin: 0 0 20px 0;
    line-height: 1.2;
  }

  .product-meta { margin-bottom: 10px; }
  .rating-and-count { display: flex; align-items: center; gap: 10px; margin-bottom: 6px; color: #2e7d32; font-weight: 600; }
  .rating-and-count .stars { color: #2e7d32; letter-spacing: 1px; }
  .reviews-link { color: #2e7d32; text-decoration: underline; font-size: 13px; }
  .feature-badges { display: flex; flex-wrap: wrap; gap: 8px; margin: 8px 0 14px 0; }
  .badge { background: #f3f5ef; color: #2c3a27; padding: 6px 10px; border-radius: 20px; font-size: 12px; font-weight: 600; }

  .product-price {
    font-size: 24px;
    margin-bottom: 20px;
  }
  .product-price .price { font-weight: 800; }
  .product-price .price-note { color:#7e8a7a; margin-left:10px; font-size:14px; }

  .compare-price {
    text-decoration: line-through;
    opacity: 0.5;
    margin-left: 10px;
  }

  .product-description {
    margin: 30px 0;
    line-height: 1.6;
    padding: 0px;
  }

  /* Form Styles */
  .product-form {
    margin-top: 30px;
    /* Place quantity and add-to-cart side by side like the reference */
    display: grid;
    grid-template-columns: minmax(120px, 160px) 1fr;
    gap: 12px;
    align-items: center;
  }

  .variant-selector { margin-bottom: 16px; }
  .selector-label { font-weight: 700; margin-bottom: 8px; }
  .variant-pills { display: flex; gap: 12px; flex-wrap: wrap; }
  .variant-pill { display: inline-flex; align-items: center; gap: 8px; border: 2px solid #d7dcd2; background:#fff; padding: 8px 12px; border-radius: 999px; cursor: pointer; transition: border-color .2s, box-shadow .2s; }
  .variant-pill img { width: 28px; height: 28px; border-radius: 50%; object-fit: cover; }
  .variant-pill.active { border-color: #1d1f1a; box-shadow: 0 0 0 2px #1d1f1a inset; }
  .variant-pill[disabled] { opacity: .5; cursor: not-allowed; }
  .sr-only-hidden { position: absolute; left: -9999px; width:1px; height:1px; }

  .purchase-options { margin: 14px 0 12px 0; border:1px solid #e6e6e6; border-radius: 12px; padding: 10px; background:#f2f7ee; }
  .option-card { background:#fff; border:1px solid #e6e6e6; border-radius: 12px; margin: 8px; position:relative; }
  .option-card.selected { border-color:#98c28b; box-shadow: 0 0 0 3px rgba(152,194,139,.35); background:#f7fbf4; }
  .option-row { display:flex; gap:12px; align-items:flex-start; padding: 14px; width:100%; cursor:pointer; }
  .option-row input { margin-top: 2px; }
  .option-content { display:flex; flex-direction:column; gap:4px; }
  .option-title { font-weight:700; }
  .option-subcopy { font-size: 12px; color:#3a4; font-weight:600; }
  .option-price { font-weight:700; }
  .option-indicator { position:absolute; right:12px; top:50%; transform:translateY(-50%); width:18px; height:18px; border:2px solid #9fbf92; border-radius:50%; background:#fff; }
  .option-card.selected .option-indicator { background:#2e7d32; border-color:#2e7d32; box-shadow: inset 0 0 0 4px #fff; }
  .benefits { list-style: none; padding: 8px 16px 12px 32px; margin: 0; }
  .benefits li { position: relative; margin: 6px 0; font-size: 13px; }
  .benefits li:before { content: '✓'; position: absolute; left: -18px; color:#2e7d32; }

  .variant-selector label,
  .quantity-selector label {
    display: block;
    font-weight: 600;
  }

  .variant-selector select,
  .quantity-selector input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ddd;
    font-size: 16px;
  }

  .quantity-selector {
    margin-bottom: 0px;
  }

  .quantity-selector label { display: none; }

  .quantity-wrapper {
    display: inline-flex;
    align-items: center;
    padding: 0 8px;
    position: relative;
    border: 1px solid #000;
    border-radius: 6px;
    height: 44px;
    background: #fff;
    gap: 4px;
  }

  .quantity-btn {
    width: 32px;
    height: 32px;
    border: none;
    background: transparent;
    color: #000;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: none;
    padding: 0;
    font-size: 18px;
    font-weight: 600;
  }

  /* Remove fancy hover/active effects for a minimal look */
  .quantity-btn:before { display: none; }
  .quantity-btn:hover:not(:disabled) { transform: none; box-shadow: none; }
  .quantity-btn:active:not(:disabled) { transform: none; }

  .quantity-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .quantity-btn.minus {
    margin-right: 5px;
  }

  .quantity-btn.plus {
    margin-left: 5px;
  }

  .quantity-icon {
    position: relative;
    z-index: 1;
  }

  .quantity-input-wrapper {
    position: relative;
    background: transparent;
    border-radius: 0;
    padding: 0 4px;
  }

  .quantity-input {
    width: 36px;
    height: 32px;
    border: none;
    text-align: center;
    font-size: 16px;
    font-weight: 500;
    background: transparent;
    color: #333;
    -moz-appearance: textfield;
  }

  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .quantity-input:focus {
    outline: none;
  }

  /* Hide animated bubble for the minimal spec */
  .quantity-bubble { display: none; }
  .quantity-bubble.show { display: none; }

  .quantity-bubble-arrow {
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%);
  }

  /* Stock indicator */
  .stock-indicator {
    display: inline-flex;
    align-items: center;
    margin-left: 20px;
    padding: 8px 16px;
    background: rgba(76, 175, 80, 0.1);
    border-radius: 20px;
    animation: fadeIn 0.5s ease-in;
  }

  .stock-dot {
    width: 8px;
    height: 8px;
    background: #4CAF50;
    border-radius: 50%;
    margin-right: 8px;
    animation: pulse 2s infinite;
  }

  .stock-text {
    font-size: 14px;
    color: #4CAF50;
    font-weight: 600;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Ripple effect for buttons */
  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 0 16px;
    height: 44px;
    background: #1e3d2b;
    color: #fff;
    border: none;
    border-radius: 8px;
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
  }

  .add-to-cart-btn:hover:not(:disabled) {
    background: #274a35;
  }

  .add-to-cart-btn:disabled {
    background: #888;
    color: #fff;
    opacity: 1;
    cursor: not-allowed;
  }

  /* Accordion Styles */
  .product-accordions {
    margin-top: 40px;
    width: 100%;
  }

  .accordion-item {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    margin-bottom: 12px;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .accordion-item:last-child {
    margin-bottom: 0;
  }

  .accordion-header {
    width: 100%;
    background: #fff;
    border: none;
    padding: 20px 24px;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.3s ease;
    font-size: 16px;
    font-weight: 600;
    color: #333;
  }

  .accordion-header:hover {
    background: #f8f8f8;
  }

  .accordion-header:focus {
    {% comment %} outline: 2px solid #000; {% endcomment %}
    outline-offset: -2px;
  }

  .accordion-title {
    flex: 1;
    font-size: 16px;
    font-weight: 600;
    color: #333;
  }

  .accordion-icon {
    font-size: 20px;
    font-weight: 300;
    color: #666;
    transition: transform 0.3s ease;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .accordion-item.active .accordion-icon {
    transform: rotate(45deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    background: #fff;
  }

  .accordion-item.active .accordion-content {
    max-height: 500px;
  }

  .accordion-body {
    padding: 0 24px 24px 24px;
    color: #666;
    line-height: 1.6;
  }

  .accordion-body p {
    margin: 0 0 16px 0;
  }

  .accordion-body p:last-child {
    margin-bottom: 0;
  }

  .accordion-body ul,
  .accordion-body ol {
    margin: 0 0 16px 0;
    padding-left: 20px;
  }

  .accordion-body li {
    margin-bottom: 8px;
  }

  .accordion-body strong {
    color: #333;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .stock-indicator { margin-left: 0px; }

    /* Keep the side-by-side layout on mobile as well */
    .product-form {
      grid-template-columns: minmax(120px, 160px) 1fr;
      gap: 12px;
    }

    .product-accordions {
      margin-top: 30px;
    }

    .accordion-header {
      padding: 16px 20px;
      font-size: 15px;
    }

    .accordion-body {
      padding: 0 20px 20px 20px;
      font-size: 14px;
    }

    .accordion-icon {
      font-size: 18px;
    }
  }

</style>

<script>
  // Image slider functions
  let currentSlide = 0;

  function showSlide(index) {
    const slides = document.querySelectorAll('.product-simple-section .slide');
    const thumbnails = document.querySelectorAll('.product-simple-section .thumbnail');

    // Hide all slides
    slides.forEach(slide => slide.classList.remove('active'));
    thumbnails.forEach(thumb => thumb.classList.remove('active'));

    // Wrap around if necessary
    currentSlide = index;
    if (currentSlide >= slides.length) currentSlide = 0;
    if (currentSlide < 0) currentSlide = slides.length - 1;

    // Show current slide
    if (slides[currentSlide]) {
      slides[currentSlide].classList.add('active');
    }

    // Highlight current thumbnail
    if (thumbnails[currentSlide]) {
      thumbnails[currentSlide].classList.add('active');
      // Scroll thumbnail into view
      thumbnails[currentSlide].scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' });
    }
  }

  function changeSlide(direction) {
    currentSlide += direction;
    showSlide(currentSlide);
  }

  function goToSlide(index) {
    currentSlide = index;
    showSlide(currentSlide);
  }

  // Quantity selector functions - Global scope for inline handlers
  function updateQuantity(change) {
    const quantityInput = document.getElementById('quantity');
    if (!quantityInput) return;

    let currentValue = parseInt(quantityInput.value) || 1;
    let newValue = currentValue + change;

    // Enforce min and max limits
    if (newValue < 1) newValue = 1;
    if (newValue > 99) newValue = 99;

    quantityInput.value = newValue;

    // Update button states
    updateQuantityButtons();

    // Show bubble animation
    showQuantityBubble(newValue);
  }

  function validateQuantity() {
    const quantityInput = document.getElementById('quantity');
    if (!quantityInput) return;

    let value = parseInt(quantityInput.value);

    if (isNaN(value) || value < 1) {
      quantityInput.value = 1;
    } else if (value > 99) {
      quantityInput.value = 99;
    }

    updateQuantityButtons();
  }

  function updateQuantityButtons() {
    const quantityInput = document.getElementById('quantity');
    const minusBtn = document.querySelector('.quantity-btn.minus');
    const plusBtn = document.querySelector('.quantity-btn.plus');

    if (!quantityInput || !minusBtn || !plusBtn) return;

    const value = parseInt(quantityInput.value) || 1;

    // Update minus button
    minusBtn.disabled = value <= 1;
    minusBtn.style.opacity = value <= 1 ? '0.3' : '1';

    // Update plus button
    plusBtn.disabled = value >= 99;
    plusBtn.style.opacity = value >= 99 ? '0.3' : '1';
  }

  function showQuantityBubble(value) {
    const bubble = document.querySelector('.quantity-bubble');
    const bubbleValue = document.querySelector('.quantity-bubble-value');

    if (bubble && bubbleValue) {
      bubbleValue.textContent = value;
      bubble.classList.add('show');

      setTimeout(() => {
        bubble.classList.remove('show');
      }, 1500);
    }
  }

  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize slider
    const slider = document.querySelector('.product-simple-section .slider-container');
    if (slider) {
      let touchStartX = 0;
      let touchEndX = 0;

      slider.addEventListener('touchstart', e => {
        touchStartX = e.changedTouches[0].screenX;
      });

      slider.addEventListener('touchend', e => {
        touchEndX = e.changedTouches[0].screenX;

        if (touchEndX < touchStartX - 50) {
          changeSlide(1); // Swipe left, go to next
        }
        if (touchEndX > touchStartX + 50) {
          changeSlide(-1); // Swipe right, go to previous
        }
      });
    }

    // Setup quantity buttons
    const minusBtn = document.querySelector('.quantity-btn.minus');
    const plusBtn = document.querySelector('.quantity-btn.plus');
    const quantityInput = document.getElementById('quantity');

    if (minusBtn) {
      minusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        updateQuantity(-1);
      });
    }

    if (plusBtn) {
      plusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        updateQuantity(1);
      });
    }

    if (quantityInput) {
      quantityInput.addEventListener('input', validateQuantity);
      quantityInput.addEventListener('change', validateQuantity);

      // Keyboard shortcuts
      quantityInput.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          updateQuantity(1);
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          updateQuantity(-1);
        }
      });
    }

    // Initialize button states
    updateQuantityButtons();

    // Initialize accordions
    initializeAccordions();
    // Open first accordion by default (right side)
    const firstAccordion = document.querySelector('.product-simple-section .product-accordions .accordion-item');
    if (firstAccordion) {
      firstAccordion.classList.add('active');
      const content = firstAccordion.querySelector('.accordion-content');
      const header = firstAccordion.querySelector('.accordion-header');
      if (content && header) {
        content.style.maxHeight = content.scrollHeight + 'px';
        header.setAttribute('aria-expanded', 'true');
      }
    }

    // Variant pill syncing
    const pills = document.querySelectorAll('.product-simple-section .variant-pill');
    const selectEl = document.getElementById('productVariant');
    const priceEl = document.querySelector('.product-simple-section .price');
    const compareEl = document.querySelector('.product-simple-section .compare-price');
    const onetimePrice = document.querySelector('.product-simple-section .onetime-price');
    const subscriptionPrice = document.querySelector('.product-simple-section .subscription-price');
    const purchaseRadios = document.querySelectorAll('.product-simple-section input[name="purchase_option"]');
    const sellingPlanInput = document.getElementById('selling_plan_input');

    function formatMoney(cents) {
      try { return Shopify.formatMoney(cents); } catch(e) { return (cents/100).toLocaleString(undefined,{style:'currency',currency:Shopify.currency.active||'GBP'}); }
    }

    function setActivePill(targetId) {
      pills.forEach(p => {
        const isActive = p.getAttribute('data-variant-id') === String(targetId);
        p.classList.toggle('active', isActive);
        p.setAttribute('aria-checked', isActive ? 'true' : 'false');
      });
    }

    function updatePricesFromVariant(variantPrice, variantCompare) {
      if (priceEl) priceEl.textContent = formatMoney(variantPrice);
      if (onetimePrice) onetimePrice.textContent = formatMoney(variantPrice);
      if (subscriptionPrice) {
        const discount = Number(subscriptionPrice.getAttribute('data-discount')) || 0;
        const discounted = Math.round(variantPrice * (100 - discount) / 100);
        subscriptionPrice.textContent = formatMoney(discounted);
      }
      if (compareEl) {
        if (variantCompare && Number(variantCompare) > Number(variantPrice)) {
          compareEl.textContent = formatMoney(variantCompare);
          compareEl.style.display = '';
        } else {
          compareEl.style.display = 'none';
        }
      }
    }

    pills.forEach(pill => {
      pill.addEventListener('click', () => {
        const id = pill.getAttribute('data-variant-id');
        const price = Number(pill.getAttribute('data-price'));
        const compare = Number(pill.getAttribute('data-compare'));
        if (selectEl) selectEl.value = id;
        setActivePill(id);
        updatePricesFromVariant(price, compare);
      });
    });

    // Purchase option toggle
    const optionCards = document.querySelectorAll('.product-simple-section .option-card');
    function reflectSelectedCard() {
      const selected = document.querySelector('.product-simple-section input[name="purchase_option"]:checked');
      optionCards.forEach(c => c.classList.remove('selected'));
      if (selected) optionCards.forEach(c => {
        const isSub = selected.value === 'subscription';
        if (isSub && c.querySelector('input[value="subscription"]')) c.classList.add('selected');
        if (!isSub && c.querySelector('input[value="onetime"]')) c.classList.add('selected');
      });
    }

    purchaseRadios.forEach(r => {
      r.addEventListener('change', () => {
        if (r.value === 'subscription' && r.checked) {
          // auto-pick the first plan id if present from dataset on container
          const groupEl = document.querySelector('.product-simple-section .purchase-options');
          const firstPlanId = (groupEl && groupEl.getAttribute('data-first-plan-id')) || (typeof window.__firstSellingPlanId !== 'undefined' ? window.__firstSellingPlanId : '');
          if (sellingPlanInput) sellingPlanInput.value = firstPlanId;
        } else if (r.value === 'onetime' && r.checked) {
          if (sellingPlanInput) sellingPlanInput.value = '';
        }
        reflectSelectedCard();

    // Accordion 3: link-only behavior - scroll to target instead of opening
    document.querySelectorAll('.product-simple-section .accordion-item.link-only .accordion-header').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = btn.getAttribute('data-scroll-target');
        if (targetId) {
          const cleaned = targetId.replace(/^#/, '');
          const el = document.getElementById(cleaned) || document.querySelector('#' + cleaned) || document.querySelector(targetId);
          if (el) {
            const y = el.getBoundingClientRect().top + window.pageYOffset - 80; // offset for sticky header
            window.scrollTo({ top: y, behavior: 'smooth' });
          }
        }
      });
    });
      });
    });
    reflectSelectedCard();

    // Render press logos if configured
    const mediaCol = document.querySelector('.product-simple-media');
    if (mediaCol) {
      const logos = [];
      // Liquid will render <span class="__press_logo" data-src="..." data-alt="..."></span> placeholders below which JS picks up.
      document.querySelectorAll('.product-simple-section .__press_logo').forEach(pl => {
        const src = pl.getAttribute('data-src');
        if (src) logos.push({src, alt: pl.getAttribute('data-alt') || ''});
        pl.remove();
      });
      if (logos.length) {
        const row = document.createElement('div');
        row.className = 'press-logos';
        logos.forEach(l => {
          const img = document.createElement('img');
          img.src = l.src; img.alt = l.alt;
          row.appendChild(img);
        });
        mediaCol.parentNode.insertBefore(row, mediaCol.nextSibling);
      }
    }
  });

  // Accordion functionality
  function initializeAccordions() {
    const accordionHeaders = document.querySelectorAll('.product-simple-section .accordion-header');
    
    accordionHeaders.forEach(header => {
      // Skip link-only accordion items; they are handled separately
      const parentItem = header.closest('.accordion-item');
      if (parentItem && parentItem.classList.contains('link-only')) {
        return;
      }
      header.addEventListener('click', function() {
        const accordionItem = this.closest('.accordion-item');
        const isActive = accordionItem.classList.contains('active');
        
        // Close all accordions
        document.querySelectorAll('.product-simple-section .accordion-item').forEach(item => {
          item.classList.remove('active');
          const content = item.querySelector('.accordion-content');
          const header = item.querySelector('.accordion-header');
          if (content && header) {
            content.style.maxHeight = '0';
            header.setAttribute('aria-expanded', 'false');
          }
        });
        
        // Open clicked accordion if it wasn't active
        if (!isActive) {
          accordionItem.classList.add('active');
          const content = accordionItem.querySelector('.accordion-content');
          const header = accordionItem.querySelector('.accordion-header');
          if (content && header) {
            content.style.maxHeight = content.scrollHeight + 'px';
            header.setAttribute('aria-expanded', 'true');
          }
        }
      });

      // Keyboard support
      header.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          this.click();
        }
      });
    });
  }

  // Keyboard navigation for slider
  document.addEventListener('keydown', e => {
    if (e.key === 'ArrowLeft') changeSlide(-1);
    if (e.key === 'ArrowRight') changeSlide(1);
  });
</script>

{% schema %}
{
  "name": "Simple Product",
  "tag": "section",
  "class": "section-product-simple",
  "settings": [
    {
      "type": "header",
      "content": "Product Display Settings"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": false
    },
    {
      "type": "text",
      "id": "rating_text",
      "label": "Rating line text",
      "default": "Join 300,000+ Happy Women"
    },
    {
      "type": "textarea",
      "id": "excerpt",
      "label": "Description excerpt override",
      "info": "If set, replaces the auto truncated product description"
    },
    {
      "type": "text",
      "id": "variant_label",
      "label": "Variant selector label",
      "default": "Choose your flavour"
    },
    {
      "type": "text",
      "id": "onetime_label",
      "label": "One-time option label",
      "default": "One-time purchase"
    },
    {
      "type": "text",
      "id": "subscription_label",
      "label": "Subscription option label",
      "default": "Subscribe and save"
    },
    {
      "type": "text",
      "id": "subscription_subcopy",
      "label": "Subscription subcopy",
      "default": "Save 20% + FREE gift"
    },
    {
      "type": "checkbox",
      "id": "enable_subscription",
      "label": "Show subscription block (if selling plans exist)",
      "default": true
    },
    {
      "type": "text",
      "id": "cta_label",
      "label": "CTA button label",
      "default": "Buy Now ⚡"
    },
    {
      "type": "text",
      "id": "price_note",
      "label": "Price note (e.g., £/per serving)",
      "default": "£/ per serving (30 servings)"
    },
    {
      "type": "header",
      "content": "Accordion 1 Settings"
    },
    {
      "type": "text",
      "id": "accordion_1_title",
      "label": "Accordion 1 Title",
      "default": "Product Details",
      "info": "Leave blank to hide this accordion"
    },
    {
      "type": "richtext",
      "id": "accordion_1_content",
      "label": "Accordion 1 Content (Rich Text)",
      "info": "Use this for formatted content with HTML"
    },
    {
      "type": "textarea",
      "id": "accordion_1_text",
      "label": "Accordion 1 Content (Plain Text)",
      "info": "Use this for simple text content (only used if Rich Text is empty)"
    },
    {
      "type": "header",
      "content": "Accordion 2 Settings"
    },
    {
      "type": "text",
      "id": "accordion_2_title",
      "label": "Accordion 2 Title",
      "default": "Shipping & Returns",
      "info": "Leave blank to hide this accordion"
    },
    {
      "type": "header",
      "content": "Accordion 3 Settings (Link-only)"
    },
    {
      "type": "text",
      "id": "accordion_3_title",
      "label": "Accordion 3 Title (Heading only)",
      "default": "FAQs"
    },
    {
      "type": "text",
      "id": "accordion_3_target_id",
      "label": "Scroll target id or selector (e.g., faq, #faq)",
      "info": "Provide the id of the FAQ section to scroll to."
    },
    {
      "type": "richtext",
      "id": "accordion_2_content",
      "label": "Accordion 2 Content (Rich Text)",
      "info": "Use this for formatted content with HTML"
    },
    {
      "type": "textarea",
      "id": "accordion_2_text",
      "label": "Accordion 2 Content (Plain Text)",
      "info": "Use this for simple text content (only used if Rich Text is empty)"
    }
  ],
  "blocks": [
    {
      "type": "badge",
      "name": "Feature badge",
      "limit": 6,
      "settings": [
        { "type": "text", "id": "text", "label": "Text", "default": "30 Servings" }
      ]
    },
    {
      "type": "benefit",
      "name": "Subscription benefit",
      "limit": 8,
      "settings": [
        { "type": "text", "id": "text", "label": "Text", "default": "Free shipping on first subscription" }
      ]
    },
    {
      "type": "press_logo",
      "name": "Press logo image",
      "limit": 6,
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Logo image" },
        { "type": "text", "id": "alt", "label": "Alt text" }
      ]
    },
    {
      "type": "feature_card",
      "name": "Feature card",
      "limit": 3,
      "settings": [
        { "type": "image_picker", "id": "icon", "label": "Icon" },
        { "type": "text", "id": "icon_alt", "label": "Icon alt" },
        { "type": "text", "id": "title", "label": "Title", "default": "New & Improved\nFormula" },
        { "type": "text", "id": "subtitle", "label": "Subtitle" }
      ]
    },
    {
      "type": "blog_image",
      "name": "Blog image (2x2)",
      "limit": 4,
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "alt", "label": "Alt text" },
        { "type": "url", "id": "link", "label": "Optional link" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Simple Product",
      "settings": {
        "accordion_1_title": "Product Details",
        "accordion_1_text": "Learn more about this product's features, materials, and specifications.",
        "accordion_2_title": "Shipping & Returns",
        "accordion_2_text": "Free shipping on orders over $50. 30-day return policy. Contact us for more information.",
        "rating_text": "Join 300,000+ Happy Women",
        "variant_label": "Choose your flavour",
        "cta_label": "Buy Now ⚡",
        "enable_subscription": true
      },
      "blocks": [
        { "type": "badge", "settings": { "text": "30 Servings" } },
        { "type": "badge", "settings": { "text": "Vegan" } },
        { "type": "badge", "settings": { "text": "Gluten-free" } },
        { "type": "benefit", "settings": { "text": "FREE Sip Cup gift worth £9.99" } },
        { "type": "benefit", "settings": { "text": "20% off every month" } },
        { "type": "benefit", "settings": { "text": "Free Shipping on first subscription purchase" } },
        { "type": "benefit", "settings": { "text": "Edit or cancel anytime" } },
        { "type": "benefit", "settings": { "text": "Delivery every 4 weeks" } }
      ]
    }
  ]
}
{% endschema %}