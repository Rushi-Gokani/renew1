{% comment %}
  Simple Product Section
  A basic, reliable product display
{% endcomment %}

<div class="page-width product-simple-section">
  <div class="product-simple-grid">
    <!-- Product Images -->
    <div class="product-simple-media">
      <div class="slider-container">
        <div class="main-slider">
          {% for image in product.images %}
            <div class="slide {% if forloop.first %}active{% endif %}" data-slide-index="{{ forloop.index0 }}">
              <img src="{{ image | image_url: width: 800 }}"
                   alt="{{ product.title | escape }} - Image {{ forloop.index }}"
                   loading="{% if forloop.first %}eager{% else %}lazy{% endif %}">
            </div>
          {% endfor %}
        </div>

        {% if product.images.size > 1 %}
          <button class="slider-nav prev" onclick="changeSlide(-1)" aria-label="Previous image">‹</button>
          <button class="slider-nav next" onclick="changeSlide(1)" aria-label="Next image">›</button>
        {% endif %}
      </div>

      {% if product.images.size > 1 %}
        <div class="thumbnail-list">
          {% for image in product.images %}
            <div class="thumbnail {% if forloop.first %}active{% endif %}"
                 onclick="goToSlide({{ forloop.index0 }})"
                 data-thumb-index="{{ forloop.index0 }}">
              <img src="{{ image | image_url: width: 100 }}"
                   alt="{{ product.title | escape }} - Thumbnail {{ forloop.index }}"
                   loading="lazy">
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>

    <!-- Product Information -->
    <div class="product-simple-info">
      <h1 class="product-title">{{ product.title }}</h1>

      <div class="product-price">
        <span class="price">{{ product.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="compare-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
      </div>

      {% if product.description != blank %}
        <div class="product-description">
          {{ product.description }}
        </div>
      {% endif %}

      <!-- Add to Cart Form -->
      <form action="/cart/add" method="post" class="product-form">
        {% if product.has_only_default_variant %}
          <input type="hidden" name="id" value="{{ product.first_available_variant.id }}">
        {% else %}
          <div class="variant-selector">
            <label for="productVariant">Choose Option:</label>
            <select name="id" id="productVariant">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}"
                        {% if variant == product.selected_or_first_available_variant %}selected{% endif %}
                        {% unless variant.available %}disabled{% endunless %}>
                  {{ variant.title }} - {{ variant.price | money }}
                  {% unless variant.available %}(Sold Out){% endunless %}
                </option>
              {% endfor %}
            </select>
          </div>
        {% endif %}

        <div class="quantity-selector">
          <label for="quantity">Quantity:</label>
          <div class="quantity-wrapper">
            <button type="button" class="quantity-btn minus" onclick="updateQuantity(-1)" aria-label="Decrease quantity">
              <svg width="12" height="2" viewBox="0 0 12 2" fill="currentColor">
                <rect width="12" height="2"/>
              </svg>
            </button>
            <input type="number" name="quantity" id="quantity" value="1" min="1" max="99" onchange="validateQuantity()">
            <button type="button" class="quantity-btn plus" onclick="updateQuantity(1)" aria-label="Increase quantity">
              <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                <rect x="5" width="2" height="12"/>
                <rect y="5" width="12" height="2"/>
              </svg>
            </button>
          </div>
        </div>

        <button type="submit" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
          {% if product.available %}
            Add to Cart
          {% else %}
            Sold Out
          {% endif %}
        </button>
      </form>
    </div>
  </div>
</div>

<style>
  .product-simple-section {
    padding: 40px 20px;
  }

  .product-simple-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    max-width: 1200px;
    margin: 0 auto;
  }

  @media (max-width: 768px) {
    .product-simple-grid {
      grid-template-columns: 1fr;
      gap: 30px;
    }
  }

  /* Slider Styles */
  .slider-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    background: #f5f5f5;
    border-radius: 8px;
  }

  .main-slider {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slide.active {
    opacity: 1;
  }

  .slide img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  /* Navigation Buttons */
  .slider-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    font-size: 24px;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .slider-nav:hover {
    background: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .slider-nav.prev {
    left: 20px;
  }

  .slider-nav.next {
    right: 20px;
  }

  /* Thumbnail Styles */
  .thumbnail-list {
    display: flex;
    gap: 10px;
    margin-top: 20px;
    overflow-x: auto;
    padding: 10px 0;
  }

  .thumbnail-list::-webkit-scrollbar {
    height: 6px;
  }

  .thumbnail-list::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  .thumbnail {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 4px;
    overflow: hidden;
    transition: all 0.3s;
  }

  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .thumbnail:hover {
    transform: scale(1.05);
  }

  .thumbnail.active {
    border-color: #000;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  /* Product Info Styles */
  .product-title {
    font-size: 36px;
    margin: 0 0 20px 0;
    line-height: 1.2;
  }

  .product-price {
    font-size: 24px;
    margin-bottom: 20px;
  }

  .compare-price {
    text-decoration: line-through;
    opacity: 0.5;
    margin-left: 10px;
  }

  .product-description {
    margin: 30px 0;
    line-height: 1.6;
  }

  /* Form Styles */
  .product-form {
    margin-top: 30px;
  }

  .variant-selector {
    margin-bottom: 20px;
  }

  .variant-selector label,
  .quantity-selector label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
  }

  .variant-selector select,
  .quantity-selector input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ddd;
    font-size: 16px;
  }

  .quantity-selector {
    margin-bottom: 20px;
  }

  .quantity-wrapper {
    display: inline-flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    background: #fff;
    margin-top: 8px;
  }

  .quantity-btn {
    width: 44px;
    height: 44px;
    border: none;
    background: #fff;
    color: #333;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
    padding: 0;
  }

  .quantity-btn:hover:not(:disabled) {
    background: #f5f5f5;
  }

  .quantity-btn:active:not(:disabled) {
    background: #e8e8e8;
  }

  .quantity-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .quantity-btn svg {
    pointer-events: none;
  }

  #quantity {
    width: 60px;
    height: 44px;
    border: none;
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    text-align: center;
    font-size: 16px;
    font-weight: 600;
    -moz-appearance: textfield;
  }

  #quantity::-webkit-outer-spin-button,
  #quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  #quantity:focus {
    outline: none;
    background: #f9f9f9;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 18px;
    background: #000;
    color: #fff;
    border: none;
    border-radius: 8px;
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
  }

  .add-to-cart-btn:hover:not(:disabled) {
    background: #333;
  }

  .add-to-cart-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
</style>

<script>
  let currentSlide = 0;
  const slides = document.querySelectorAll('.product-simple-section .slide');
  const thumbnails = document.querySelectorAll('.product-simple-section .thumbnail');

  function showSlide(index) {
    // Hide all slides
    slides.forEach(slide => slide.classList.remove('active'));
    thumbnails.forEach(thumb => thumb.classList.remove('active'));

    // Wrap around if necessary
    if (index >= slides.length) currentSlide = 0;
    if (index < 0) currentSlide = slides.length - 1;

    // Show current slide
    if (slides[currentSlide]) {
      slides[currentSlide].classList.add('active');
    }

    // Highlight current thumbnail
    if (thumbnails[currentSlide]) {
      thumbnails[currentSlide].classList.add('active');
      // Scroll thumbnail into view
      thumbnails[currentSlide].scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' });
    }
  }

  function changeSlide(direction) {
    currentSlide += direction;
    showSlide(currentSlide);
  }

  function goToSlide(index) {
    currentSlide = index;
    showSlide(currentSlide);
  }

  // Touch support for mobile
  let touchStartX = 0;
  let touchEndX = 0;

  const slider = document.querySelector('.product-simple-section .slider-container');
  if (slider) {
    slider.addEventListener('touchstart', e => {
      touchStartX = e.changedTouches[0].screenX;
    });

    slider.addEventListener('touchend', e => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });
  }

  function handleSwipe() {
    if (touchEndX < touchStartX - 50) {
      changeSlide(1); // Swipe left, go to next
    }
    if (touchEndX > touchStartX + 50) {
      changeSlide(-1); // Swipe right, go to previous
    }
  }

  // Keyboard navigation
  document.addEventListener('keydown', e => {
    if (e.key === 'ArrowLeft') changeSlide(-1);
    if (e.key === 'ArrowRight') changeSlide(1);
  });

  // Quantity selector functions
  function updateQuantity(change) {
    const input = document.getElementById('quantity');
    let currentValue = parseInt(input.value) || 1;
    let newValue = currentValue + change;

    // Enforce min and max limits
    if (newValue < 1) newValue = 1;
    if (newValue > 99) newValue = 99;

    input.value = newValue;
    updateQuantityButtons();
  }

  function validateQuantity() {
    const input = document.getElementById('quantity');
    let value = parseInt(input.value);

    // If not a valid number or less than 1, set to 1
    if (isNaN(value) || value < 1) {
      input.value = 1;
    }
    // If greater than 99, set to 99
    else if (value > 99) {
      input.value = 99;
    }

    updateQuantityButtons();
  }

  function updateQuantityButtons() {
    const input = document.getElementById('quantity');
    const value = parseInt(input.value) || 1;
    const minusBtn = document.querySelector('.quantity-btn.minus');
    const plusBtn = document.querySelector('.quantity-btn.plus');

    // Disable minus button at minimum
    if (minusBtn) {
      minusBtn.disabled = value <= 1;
    }

    // Disable plus button at maximum
    if (plusBtn) {
      plusBtn.disabled = value >= 99;
    }
  }

  // Initialize quantity buttons state on page load
  document.addEventListener('DOMContentLoaded', () => {
    updateQuantityButtons();

    // Add input event listener for real-time validation
    const quantityInput = document.getElementById('quantity');
    if (quantityInput) {
      quantityInput.addEventListener('input', validateQuantity);
    }
  });
</script>

{% schema %}
{
  "name": "Simple Product",
  "tag": "section",
  "class": "section-product-simple",
  "settings": [
    {
      "type": "header",
      "content": "Product Display Settings"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Simple Product",
      "settings": {}
    }
  ]
}
{% endschema %}