{% comment %}
  Simple Product Section
  A basic, reliable product display
{% endcomment %}

<div class="page-width product-simple-section">
  <div class="product-simple-grid">
    <!-- Product Images -->
    <div class="product-simple-media">
      <div class="slider-container">
        <div class="main-slider">
          {% for image in product.images %}
            <div class="slide {% if forloop.first %}active{% endif %}" data-slide-index="{{ forloop.index0 }}">
              <img src="{{ image | image_url: width: 800 }}"
                   alt="{{ product.title | escape }} - Image {{ forloop.index }}"
                   loading="{% if forloop.first %}eager{% else %}lazy{% endif %}">
            </div>
          {% endfor %}
        </div>

        {% if product.images.size > 1 %}
          <button class="slider-nav prev" onclick="changeSlide(-1)" aria-label="Previous image">‹</button>
          <button class="slider-nav next" onclick="changeSlide(1)" aria-label="Next image">›</button>
        {% endif %}
      </div>

      {% if product.images.size > 1 %}
        <div class="thumbnail-list">
          {% for image in product.images %}
            <div class="thumbnail {% if forloop.first %}active{% endif %}"
                 onclick="goToSlide({{ forloop.index0 }})"
                 data-thumb-index="{{ forloop.index0 }}">
              <img src="{{ image | image_url: width: 100 }}"
                   alt="{{ product.title | escape }} - Thumbnail {{ forloop.index }}"
                   loading="lazy">
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>

    <!-- Product Information -->
    <div class="product-simple-info">
      <h1 class="product-title">{{ product.title }}</h1>

      <div class="product-price">
        <span class="price">{{ product.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="compare-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
      </div>

      {% if product.description != blank %}
        <div class="product-description">
          {{ product.description }}
        </div>
      {% endif %}

      <!-- Add to Cart Form -->
      <form action="{{ routes.cart_add_url }}" method="post" class="product-form" enctype="multipart/form-data">
        {% if product.has_only_default_variant %}
          <input type="hidden" name="id" value="{{ product.first_available_variant.id }}">
        {% else %}
          <div class="variant-selector">
            <label for="productVariant">Choose Option:</label>
            <select name="id" id="productVariant">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}"
                        {% if variant == product.selected_or_first_available_variant %}selected{% endif %}
                        {% unless variant.available %}disabled{% endunless %}>
                  {{ variant.title }} - {{ variant.price | money }}
                  {% unless variant.available %}(Sold Out){% endunless %}
                </option>
              {% endfor %}
            </select>
          </div>
        {% endif %}

        <div class="quantity-selector">
          <label for="quantity">Quantity:</label>
          <div class="quantity-wrapper">
            <button type="button" class="quantity-btn minus" aria-label="Decrease quantity">
              <span class="quantity-icon">−</span>
            </button>
            <div class="quantity-input-wrapper">
              <input type="number" name="quantity" id="quantity" class="quantity-input" value="1" min="1" max="99">
              <div class="quantity-bubble">
                <span class="quantity-bubble-value">1</span>
                <svg class="quantity-bubble-arrow" width="10" height="6" viewBox="0 0 10 6">
                  <polygon points="5,6 0,0 10,0" fill="currentColor"/>
                </svg>
              </div>
            </div>
            <button type="button" class="quantity-btn plus" aria-label="Increase quantity">
              <span class="quantity-icon">+</span>
            </button>
          </div>
     
        </div>

        <button type="submit" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
          {% if product.available %}
            Add to Cart
          {% else %}
            Sold Out
          {% endif %}
        </button>
      </form>
    </div>
  </div>
</div>

<style>
  .product-simple-section {
    padding: 40px 20px;
    /* Prevent horizontal overflow on small screens */
    overflow-x: hidden;
  }

  .product-simple-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
  }

  /* Prevent grid children from causing horizontal overflow */
  .product-simple-media,
  .product-simple-info {
    min-width: 0;
  }

  @media (max-width: 768px) {
    .product-simple-grid {
      grid-template-columns: 1fr;
      gap: 30px;
    }
    .product-simple-media,
    .product-simple-info,
    .slider-container,
    .main-slider {
      max-width: 100%;
    }
    /* Ensure all children respect container width on mobile */
    .product-simple-section *,
    .product-simple-section *::before,
    .product-simple-section *::after {
      box-sizing: border-box;
      max-width: 100%;
    }
    .product-simple-section img {
      max-width: 100%;
      height: auto;
    }
    .thumbnail-list {
      -webkit-overflow-scrolling: touch;
      overflow-x: hidden;
      flex-wrap: wrap;
      row-gap: 10px;
      column-gap: 10px;
      padding: 10px 0 0 0;
      max-width: 100%;
    }
    .thumbnail {
      width: 64px;
      height: 64px;
      flex: 0 0 64px;
    }
    /* Quantity row should wrap to avoid overflow */
    .quantity-selector {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 10px;
    }
    .quantity-wrapper {
      flex: 1 1 auto;
      min-width: 0;
    }
    .stock-indicator {
      margin-left: 0;
    }

    /* Mobile: place quantity and add-to-cart side by side */
    .product-form {
      display: grid;
      grid-template-columns: minmax(120px, 160px) 1fr;
      gap: 12px;
      align-items: center;
    }
    .quantity-selector {
      margin-bottom: 0;
    }
    .quantity-selector label {
      display: none;
    }
    .quantity-wrapper {
      width: 100%;
      justify-content: space-between;
      gap: 0;
      border: 1px solid #000;
      border-radius: 6px;
      padding: 0 6px;
      background: #fff;
      min-height: 44px;
    }
    .quantity-btn {
      width: 32px;
      height: 32px;
      font-size: 18px;
      box-shadow: none;
    }
    .quantity-input-wrapper {
      flex: 1 1 auto;
      min-width: 0;
      max-width: none;
      padding: 0 8px;
      border-radius: 0;
      background: transparent;
    }
    .quantity-input {
      width: 40px;
      height: 32px;
      font-size: 16px;
    }
    .quantity-bubble {
      display: none;
    }
    .add-to-cart-btn {
      width: 100%;
      height: 44px;
    }
    .stock-indicator {
      display: none;
    }
  }

  /* Slider Styles */
  .slider-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    background: #f5f5f5;
    border-radius: 8px;
  }

  .main-slider {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slide.active {
    opacity: 1;
  }

  .slide img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  /* Navigation Buttons */
  .slider-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    font-size: 24px;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .slider-nav:hover {
    background: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .slider-nav.prev {
    left: 20px;
  }

  .slider-nav.next {
    right: 20px;
  }

  /* Thumbnail Styles */
  .thumbnail-list {
    display: flex;
    gap: 10px;
    margin-top: 20px;
    overflow-x: auto;
    padding: 10px 0;
    width: 100%;
  }

  .thumbnail-list::-webkit-scrollbar {
    height: 6px;
  }

  .thumbnail-list::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
  }

  .thumbnail-list::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  .thumbnail {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 4px;
    overflow: hidden;
    transition: all 0.3s;
    box-sizing: border-box;
  }

  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .thumbnail:hover {
    transform: scale(1.05);
  }

  .thumbnail.active {
    border-color: #000;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  /* Product Info Styles */
  .product-title {
    font-size: 36px;
    margin: 0 0 20px 0;
    line-height: 1.2;
  }

  .product-price {
    font-size: 24px;
    margin-bottom: 20px;
  }

  .compare-price {
    text-decoration: line-through;
    opacity: 0.5;
    margin-left: 10px;
  }

  .product-description {
    margin: 30px 0;
    line-height: 1.6;
  }

  /* Form Styles */
  .product-form {
    margin-top: 30px;
    /* Place quantity and add-to-cart side by side like the reference */
    display: grid;
    grid-template-columns: minmax(120px, 160px) 1fr;
    gap: 12px;
    align-items: center;
  }

  .variant-selector {
    margin-bottom: 20px;
  }

  .variant-selector label,
  .quantity-selector label {
    display: block;
    font-weight: 600;
  }

  .variant-selector select,
  .quantity-selector input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ddd;
    font-size: 16px;
  }

  .quantity-selector {
    margin-bottom: 30px;
  }

  .quantity-selector label { display: none; }

  .quantity-wrapper {
    display: inline-flex;
    align-items: center;
    padding: 0 8px;
    position: relative;
    border: 1px solid #000;
    border-radius: 6px;
    height: 44px;
    background: #fff;
    gap: 4px;
  }

  .quantity-btn {
    width: 32px;
    height: 32px;
    border: none;
    background: transparent;
    color: #000;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: none;
    padding: 0;
    font-size: 18px;
    font-weight: 600;
  }

  /* Remove fancy hover/active effects for a minimal look */
  .quantity-btn:before { display: none; }
  .quantity-btn:hover:not(:disabled) { transform: none; box-shadow: none; }
  .quantity-btn:active:not(:disabled) { transform: none; }

  .quantity-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .quantity-btn.minus {
    margin-right: 5px;
  }

  .quantity-btn.plus {
    margin-left: 5px;
  }

  .quantity-icon {
    position: relative;
    z-index: 1;
  }

  .quantity-input-wrapper {
    position: relative;
    background: transparent;
    border-radius: 0;
    padding: 0 4px;
  }

  .quantity-input {
    width: 36px;
    height: 32px;
    border: none;
    text-align: center;
    font-size: 16px;
    font-weight: 500;
    background: transparent;
    color: #333;
    -moz-appearance: textfield;
  }

  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .quantity-input:focus {
    outline: none;
  }

  /* Hide animated bubble for the minimal spec */
  .quantity-bubble { display: none; }
  .quantity-bubble.show { display: none; }

  .quantity-bubble-arrow {
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%);
  }

  /* Stock indicator */
  .stock-indicator {
    display: inline-flex;
    align-items: center;
    margin-left: 20px;
    padding: 8px 16px;
    background: rgba(76, 175, 80, 0.1);
    border-radius: 20px;
    animation: fadeIn 0.5s ease-in;
  }

  .stock-dot {
    width: 8px;
    height: 8px;
    background: #4CAF50;
    border-radius: 50%;
    margin-right: 8px;
    animation: pulse 2s infinite;
  }

  .stock-text {
    font-size: 14px;
    color: #4CAF50;
    font-weight: 600;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Ripple effect for buttons */
  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 0 16px;
    height: 44px;
    background: #000;
    color: #fff;
    border: none;
    border-radius: 8px;
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
  }

  .add-to-cart-btn:hover:not(:disabled) {
    background: #333;
  }

  .add-to-cart-btn:disabled {
    background: #888;
    color: #fff;
    opacity: 1;
    cursor: not-allowed;
  }
  @media (max-width: 768px) {
    .stock-indicator { margin-left: 0px; }

    /* Keep the side-by-side layout on mobile as well */
    .product-form {
      grid-template-columns: minmax(120px, 160px) 1fr;
      gap: 12px;
    }
  }

</style>

<script>
  // Image slider functions
  let currentSlide = 0;

  function showSlide(index) {
    const slides = document.querySelectorAll('.product-simple-section .slide');
    const thumbnails = document.querySelectorAll('.product-simple-section .thumbnail');

    // Hide all slides
    slides.forEach(slide => slide.classList.remove('active'));
    thumbnails.forEach(thumb => thumb.classList.remove('active'));

    // Wrap around if necessary
    currentSlide = index;
    if (currentSlide >= slides.length) currentSlide = 0;
    if (currentSlide < 0) currentSlide = slides.length - 1;

    // Show current slide
    if (slides[currentSlide]) {
      slides[currentSlide].classList.add('active');
    }

    // Highlight current thumbnail
    if (thumbnails[currentSlide]) {
      thumbnails[currentSlide].classList.add('active');
      // Scroll thumbnail into view
      thumbnails[currentSlide].scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' });
    }
  }

  function changeSlide(direction) {
    currentSlide += direction;
    showSlide(currentSlide);
  }

  function goToSlide(index) {
    currentSlide = index;
    showSlide(currentSlide);
  }

  // Quantity selector functions - Global scope for inline handlers
  function updateQuantity(change) {
    const quantityInput = document.getElementById('quantity');
    if (!quantityInput) return;

    let currentValue = parseInt(quantityInput.value) || 1;
    let newValue = currentValue + change;

    // Enforce min and max limits
    if (newValue < 1) newValue = 1;
    if (newValue > 99) newValue = 99;

    quantityInput.value = newValue;

    // Update button states
    updateQuantityButtons();

    // Show bubble animation
    showQuantityBubble(newValue);
  }

  function validateQuantity() {
    const quantityInput = document.getElementById('quantity');
    if (!quantityInput) return;

    let value = parseInt(quantityInput.value);

    if (isNaN(value) || value < 1) {
      quantityInput.value = 1;
    } else if (value > 99) {
      quantityInput.value = 99;
    }

    updateQuantityButtons();
  }

  function updateQuantityButtons() {
    const quantityInput = document.getElementById('quantity');
    const minusBtn = document.querySelector('.quantity-btn.minus');
    const plusBtn = document.querySelector('.quantity-btn.plus');

    if (!quantityInput || !minusBtn || !plusBtn) return;

    const value = parseInt(quantityInput.value) || 1;

    // Update minus button
    minusBtn.disabled = value <= 1;
    minusBtn.style.opacity = value <= 1 ? '0.3' : '1';

    // Update plus button
    plusBtn.disabled = value >= 99;
    plusBtn.style.opacity = value >= 99 ? '0.3' : '1';
  }

  function showQuantityBubble(value) {
    const bubble = document.querySelector('.quantity-bubble');
    const bubbleValue = document.querySelector('.quantity-bubble-value');

    if (bubble && bubbleValue) {
      bubbleValue.textContent = value;
      bubble.classList.add('show');

      setTimeout(() => {
        bubble.classList.remove('show');
      }, 1500);
    }
  }

  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize slider
    const slider = document.querySelector('.product-simple-section .slider-container');
    if (slider) {
      let touchStartX = 0;
      let touchEndX = 0;

      slider.addEventListener('touchstart', e => {
        touchStartX = e.changedTouches[0].screenX;
      });

      slider.addEventListener('touchend', e => {
        touchEndX = e.changedTouches[0].screenX;

        if (touchEndX < touchStartX - 50) {
          changeSlide(1); // Swipe left, go to next
        }
        if (touchEndX > touchStartX + 50) {
          changeSlide(-1); // Swipe right, go to previous
        }
      });
    }

    // Setup quantity buttons
    const minusBtn = document.querySelector('.quantity-btn.minus');
    const plusBtn = document.querySelector('.quantity-btn.plus');
    const quantityInput = document.getElementById('quantity');

    if (minusBtn) {
      minusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        updateQuantity(-1);
      });
    }

    if (plusBtn) {
      plusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        updateQuantity(1);
      });
    }

    if (quantityInput) {
      quantityInput.addEventListener('input', validateQuantity);
      quantityInput.addEventListener('change', validateQuantity);

      // Keyboard shortcuts
      quantityInput.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          updateQuantity(1);
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          updateQuantity(-1);
        }
      });
    }

    // Initialize button states
    updateQuantityButtons();
  });

  // Keyboard navigation for slider
  document.addEventListener('keydown', e => {
    if (e.key === 'ArrowLeft') changeSlide(-1);
    if (e.key === 'ArrowRight') changeSlide(1);
  });
</script>

{% schema %}
{
  "name": "Simple Product",
  "tag": "section",
  "class": "section-product-simple",
  "settings": [
    {
      "type": "header",
      "content": "Product Display Settings"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Simple Product",
      "settings": {}
    }
  ]
}
{% endschema %}