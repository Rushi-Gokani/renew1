{% comment %} {% doc %}
  @prompt
    i want a section which has 2 description lines about the brand and icon with small text below the section should be such that icons are 5 on the desktop and slider on mobile make sure all editable options and best practices of shopify are followed in this, add dummy icons and also the ability to change fonts for the text should be there for the 2 lines and spacing  between them rest is good, The section on mobile is not very responsive and also I can see one line be one line small the icons are also very random and just debug this section properly please currently it looks like you have just made something broken and stuck it follow the best practices and everything else that you know and just refined for what desktop and mobile also they are navigation and mobile can't be arrows dot AC you have to give one option and just make it smooth and nice, in the text lines can you add some animation that comes in when the page is loaded something neat and good

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-brand-features-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-brand-features__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-brand-features__header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: {{ block.settings.content_spacing }}px;
  }

  .ai-brand-features__description-1-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_1_font_size }}px;
    font-family: {{ block.settings.description_1_font.family }}, {{ block.settings.description_1_font.fallback_families }};
    font-weight: {{ block.settings.description_1_font.weight }};
    font-style: {{ block.settings.description_1_font.style }};
    line-height: 1.5;
    margin: 0 0 {{ block.settings.description_spacing }}px 0;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    opacity: 0;
    transform: translateY(30px);
    animation: ai-fade-in-up-{{ ai_gen_id }} 0.8s ease-out forwards;
  }

  .ai-brand-features__description-2-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_2_font_size }}px;
    font-family: {{ block.settings.description_2_font.family }}, {{ block.settings.description_2_font.fallback_families }};
    font-weight: {{ block.settings.description_2_font.weight }};
    font-style: {{ block.settings.description_2_font.style }};
    line-height: 1.5;
    margin: 0;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    opacity: 0;
    transform: translateY(30px);
    animation: ai-fade-in-up-{{ ai_gen_id }} 0.8s ease-out 0.3s forwards;
  }

  .ai-brand-features__icons-wrapper-{{ ai_gen_id }} {
    position: relative;
    opacity: 0;
    transform: translateY(20px);
    animation: ai-fade-in-up-{{ ai_gen_id }} 0.8s ease-out 0.6s forwards;
  }

  .ai-brand-features__icons-desktop-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: {{ block.settings.icon_spacing }}px;
  }

  .ai-brand-features__icons-mobile-{{ ai_gen_id }} {
    display: none;
    position: relative;
    overflow: hidden;
    margin: 0 -20px;
    padding: 0 20px;
  }

  .ai-brand-features__slider-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.icon_spacing }}px;
  }

  .ai-brand-features__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - {{ block.settings.icon_spacing | times: block.settings.mobile_slides_visible | minus: block.settings.icon_spacing }}px) / {{ block.settings.mobile_slides_visible }});
    min-width: 0;
  }

  .ai-brand-features__icon-item-{{ ai_gen_id }} {
    text-align: center;
    padding: {{ block.settings.icon_padding }}px;
  }

  .ai-brand-features__icon-container-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    margin: 0 auto {{ block.settings.icon_text_spacing }}px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: {{ block.settings.icon_background_color }};
    border-radius: {{ block.settings.icon_border_radius }}px;
    border: {{ block.settings.icon_border_width }}px solid {{ block.settings.icon_border_color }};
  }

  .ai-brand-features__icon-container-{{ ai_gen_id }} svg {
    width: calc({{ block.settings.icon_size }}px * 0.5);
    height: calc({{ block.settings.icon_size }}px * 0.5);
    color: {{ block.settings.icon_color }};
    stroke-width: 1.5;
  }

  .ai-brand-features__icon-container-{{ ai_gen_id }} img {
    width: calc({{ block.settings.icon_size }}px * 0.7);
    height: calc({{ block.settings.icon_size }}px * 0.7);
    object-fit: contain;
  }

  .ai-brand-features__icon-text-{{ ai_gen_id }} {
    color: {{ block.settings.icon_text_color }};
    font-size: {{ block.settings.icon_text_size }}px;
    line-height: 1.4;
    font-weight: 500;
  }

  .ai-brand-features__navigation-{{ ai_gen_id }} {
    display: none;
    justify-content: center;
    gap: 12px;
    margin-top: 24px;
  }

  .ai-brand-features__nav-button-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 1px solid {{ block.settings.nav_button_border_color }};
    background-color: {{ block.settings.nav_button_background }};
    color: {{ block.settings.nav_button_color }};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }

  .ai-brand-features__nav-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_background }};
    color: {{ block.settings.nav_button_hover_color }};
    transform: scale(1.05);
  }

  .ai-brand-features__nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.4;
    cursor: not-allowed;
    transform: none;
  }

  .ai-brand-features__nav-button-{{ ai_gen_id }} svg {
    width: 18px;
    height: 18px;
  }

  .ai-brand-features__dots-{{ ai_gen_id }} {
    display: none;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-brand-features__dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
    padding: 0;
  }

  .ai-brand-features__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
    transform: scale(1.2);
  }

  @keyframes ai-fade-in-up-{{ ai_gen_id }} {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes ai-typewriter-{{ ai_gen_id }} {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  @keyframes ai-blink-{{ ai_gen_id }} {
    0%, 50% {
      border-color: transparent;
    }
    51%, 100% {
      border-color: {{ block.settings.text_color }};
    }
  }

  {% if block.settings.animation_style == 'typewriter' %}
    .ai-brand-features__description-1-{{ ai_gen_id }} {
      animation: none;
      opacity: 1;
      transform: none;
      overflow: hidden;
      white-space: nowrap;
      width: 0;
      border-right: 2px solid {{ block.settings.text_color }};
      animation: ai-typewriter-{{ ai_gen_id }} 2s steps(40, end) forwards,
                 ai-blink-{{ ai_gen_id }} 1s infinite;
    }

    .ai-brand-features__description-2-{{ ai_gen_id }} {
      animation: none;
      opacity: 0;
      transform: translateY(30px);
      animation: ai-fade-in-up-{{ ai_gen_id }} 0.8s ease-out 2.2s forwards;
    }

    .ai-brand-features__icons-wrapper-{{ ai_gen_id }} {
      animation-delay: 3s;
    }
  {% endif %}

  {% if block.settings.animation_style == 'slide_left' %}
    .ai-brand-features__description-1-{{ ai_gen_id }} {
      transform: translateX(-50px);
      animation: ai-slide-in-left-{{ ai_gen_id }} 0.8s ease-out forwards;
    }

    .ai-brand-features__description-2-{{ ai_gen_id }} {
      transform: translateX(50px);
      animation: ai-slide-in-right-{{ ai_gen_id }} 0.8s ease-out 0.3s forwards;
    }

    @keyframes ai-slide-in-left-{{ ai_gen_id }} {
      from {
        opacity: 0;
        transform: translateX(-50px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes ai-slide-in-right-{{ ai_gen_id }} {
      from {
        opacity: 0;
        transform: translateX(50px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  {% endif %}

  {% if block.settings.animation_style == 'scale' %}
    .ai-brand-features__description-1-{{ ai_gen_id }} {
      transform: scale(0.8);
      animation: ai-scale-in-{{ ai_gen_id }} 0.8s ease-out forwards;
    }

    .ai-brand-features__description-2-{{ ai_gen_id }} {
      transform: scale(0.8);
      animation: ai-scale-in-{{ ai_gen_id }} 0.8s ease-out 0.3s forwards;
    }

    @keyframes ai-scale-in-{{ ai_gen_id }} {
      from {
        opacity: 0;
        transform: scale(0.8);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }
  {% endif %}

  @media screen and (max-width: 749px) {
    .ai-brand-features__container-{{ ai_gen_id }} {
      padding: 0 16px;
    }

    .ai-brand-features__description-1-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_1_font_size | times: 0.9 }}px;
      margin-bottom: {{ block.settings.description_spacing | times: 0.8 }}px;
    }

    .ai-brand-features__description-2-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_2_font_size | times: 0.9 }}px;
    }

    .ai-brand-features__icons-desktop-{{ ai_gen_id }} {
      display: none;
    }

    .ai-brand-features__icons-mobile-{{ ai_gen_id }} {
      display: block;
      margin: 0 -16px;
      padding: 0 16px;
    }

    {% if block.settings.mobile_navigation == 'arrows' %}
      .ai-brand-features__navigation-{{ ai_gen_id }} {
        display: flex;}
    {% endif %}

    {% if block.settings.mobile_navigation == 'dots' %}
      .ai-brand-features__dots-{{ ai_gen_id }} {
        display: flex;
      }
    {% endif %}

    .ai-brand-features__icon-item-{{ ai_gen_id }} {
      padding: {{ block.settings.icon_padding | times: 0.7 }}px;
    }

    .ai-brand-features__icon-container-{{ ai_gen_id }} {
      width: {{ block.settings.icon_size | times: 0.8 }}px;
      height: {{ block.settings.icon_size | times: 0.8 }}px;
    }

    .ai-brand-features__icon-container-{{ ai_gen_id }} svg {
      width: calc({{ block.settings.icon_size | times: 0.8 }}px * 0.5);
      height: calc({{ block.settings.icon_size | times: 0.8 }}px * 0.5);
    }

    .ai-brand-features__icon-container-{{ ai_gen_id }} img {
      width: calc({{ block.settings.icon_size | times: 0.8 }}px * 0.7);
      height: calc({{ block.settings.icon_size | times: 0.8 }}px * 0.7);
    }

    .ai-brand-features__icon-text-{{ ai_gen_id }} {
      font-size: {{ block.settings.icon_text_size | times: 0.9 }}px;
    }

    {% if block.settings.animation_style == 'typewriter' %}
      .ai-brand-features__description-1-{{ ai_gen_id }} {
        white-space: normal;
        width: auto;
        border-right: none;
        animation: ai-fade-in-up-{{ ai_gen_id }} 0.8s ease-out forwards;
      }
    {% endif %}
  }

  @media screen and (max-width: 480px) {
    .ai-brand-features__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ block.settings.icon_spacing | times: 0.8 | times: block.settings.mobile_slides_visible | minus: block.settings.icon_spacing | times: 0.8 }}px) / {{ block.settings.mobile_slides_visible }});
    }

    .ai-brand-features__slider-{{ ai_gen_id }} {
      gap: {{ block.settings.icon_spacing | times: 0.8 }}px;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .ai-brand-features__description-1-{{ ai_gen_id }},
    .ai-brand-features__description-2-{{ ai_gen_id }},
    .ai-brand-features__icons-wrapper-{{ ai_gen_id }} {
      animation: none;
      opacity: 1;
      transform: none;
    }

    {% if block.settings.animation_style == 'typewriter' %}
      .ai-brand-features__description-1-{{ ai_gen_id }} {
        white-space: normal;
        width: auto;
        border-right: none;
      }
    {% endif %}
  }
{% endstyle %}

<brand-features-slider-{{ ai_gen_id }}
  class="ai-brand-features-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-brand-features__container-{{ ai_gen_id }}">
    {% if block.settings.description_line_1 != blank or block.settings.description_line_2 != blank %}
      <div class="ai-brand-features__header-{{ ai_gen_id }}">
        {% if block.settings.description_line_1 != blank %}
          <div class="ai-brand-features__description-1-{{ ai_gen_id }}">
            {{ block.settings.description_line_1 }}
          </div>
        {% endif %}
        {% if block.settings.description_line_2 != blank %}
          <div class="ai-brand-features__description-2-{{ ai_gen_id }}">
            {{ block.settings.description_line_2 }}
          </div>
        {% endif %}
      </div>
    {% endif %}<div class="ai-brand-features__icons-wrapper-{{ ai_gen_id }}">
      <div class="ai-brand-features__icons-desktop-{{ ai_gen_id }}">
        {% for i in (1..5) %}
          {% liquid
            assign icon_key = 'icon_' | append: i
            assign text_key = 'icon_text_' | append: i
            assign icon_image = block.settings[icon_key]
            assign icon_text = block.settings[text_key]
          %}
          <div class="ai-brand-features__icon-item-{{ ai_gen_id }}">
            <div class="ai-brand-features__icon-container-{{ ai_gen_id }}">
              {% if icon_image %}
                <img
                  src="{{ icon_image | image_url: width: 100 }}"
                  alt="{{ icon_text | escape }}"
                  width="100"
                  height="100"loading="lazy"
                >
              {% else %}
                {% case i %}
                  {% when 1 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path d="M9 12l2 2 4-4"/>
                      <circle cx="12" cy="12" r="9"/>
                    </svg>
                  {% when 2 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
                      <polyline points="3.27,6.96 12,12.01 20.73,6.96"/>
                      <line x1="12" y1="22.08" x2="12" y2="12"/>
                    </svg>
                  {% when 3 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  {% when 4 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/>
                    </svg>
                  {% when 5 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <circle cx="12" cy="12" r="3"/>
                      <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"/>
                    </svg>
                {% endcase %}
              {% endif %}
            </div>
            {% if icon_text != blank %}
              <div class="ai-brand-features__icon-text-{{ ai_gen_id }}">
                {{ icon_text }}
              </div>
            {% endif %}
          </div>
        {% endfor %}
      </div>

      <div class="ai-brand-features__icons-mobile-{{ ai_gen_id }}">
        <div class="ai-brand-features__slider-{{ ai_gen_id }}" data-slider>
          {% for i in (1..5) %}
            {% liquid
              assign icon_key = 'icon_' | append: i
              assign text_key = 'icon_text_' | append: i
              assign icon_image = block.settings[icon_key]
              assign icon_text = block.settings[text_key]
            %}
            <div class="ai-brand-features__slide-{{ ai_gen_id }}">
              <div class="ai-brand-features__icon-item-{{ ai_gen_id }}">
                <div class="ai-brand-features__icon-container-{{ ai_gen_id }}">
                  {% if icon_image %}
                    <img
                      src="{{ icon_image | image_url: width: 100 }}"
                      alt="{{ icon_text | escape }}"
                      width="100"
                      height="100"
                      loading="lazy"
                    >
                  {% else %}
                    {% case i %}
                      {% when 1 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <path d="M9 12l2 2 4-4"/>
                          <circle cx="12" cy="12" r="9"/>
                        </svg>
                      {% when 2 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
                          <polyline points="3.27,6.96 12,12.01 20.73,6.96"/>
                          <line x1="12" y1="22.08" x2="12" y2="12"/>
                        </svg>
                      {% when 3 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                      {% when 4 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/>
                        </svg>
                      {% when 5 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <circle cx="12" cy="12" r="3"/>
                          <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"/>
                        </svg>
                    {% endcase %}
                  {% endif %}
                </div>
                {% if icon_text != blank %}
                  <div class="ai-brand-features__icon-text-{{ ai_gen_id }}">
                    {{ icon_text }}
                  </div>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>

      {% if block.settings.mobile_navigation == 'arrows' %}
        <div class="ai-brand-features__navigation-{{ ai_gen_id }}">
          <button
            class="ai-brand-features__nav-button-{{ ai_gen_id }}"
            data-prev
            aria-label="Previous slide"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <polyline points="15,18 9,12 15,6"/></svg>
          </button>
          <button
            class="ai-brand-features__nav-button-{{ ai_gen_id }}"
            data-next
            aria-label="Next slide"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <polyline points="9,18 15,12 9,6"/>
            </svg>
          </button>
        </div>
      {% endif %}

      {% if block.settings.mobile_navigation == 'dots' %}
        <div class="ai-brand-features__dots-{{ ai_gen_id }}" data-dots></div>
      {% endif %}
    </div>
  </div>
</brand-features-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class BrandFeaturesSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.slidesVisible = parseInt('{{ block.settings.mobile_slides_visible }}');
        this.totalSlides = 5;
        this.maxSlides = Math.max(0, this.totalSlides - this.slidesVisible);
        this.isTouch = false;
      }

      connectedCallback() {
        this.slider = this.querySelector('[data-slider]');
        this.prevButton = this.querySelector('[data-prev]');
        this.nextButton = this.querySelector('[data-next]');
        this.dotsContainer = this.querySelector('[data-dots]');

        if (this.dotsContainer) {
          this.createDots();
        }
        this.updateSlider();
        this.setupEventListeners();
      }

      createDots() {
        this.dotsContainer.innerHTML = '';
        for (let i = 0; i <= this.maxSlides; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-brand-features__dot-{{ ai_gen_id }}';
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
        }
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        let startX = 0;
        let currentX = 0;
        let isDragging = false;

        this.slider.addEventListener('touchstart', (e) => {
          this.isTouch = true;
          startX = e.touches[0].clientX;
          isDragging = true;
          this.slider.style.transition = 'none';
        }, { passive: true });

        this.slider.addEventListener('touchmove', (e) => {
          if (!isDragging) return;
          currentX = e.touches[0].clientX;
          const diff = startX - currentX;
          const currentTransform = -(this.currentSlide * (100 / this.slidesVisible));
          const dragTransform = currentTransform - (diff / this.slider.offsetWidth * 100);
          this.slider.style.transform = `translateX(${dragTransform}%)`;
        }, { passive: true });

        this.slider.addEventListener('touchend', (e) => {
          if (!isDragging) return;
          isDragging = false;
          this.slider.style.transition = 'transform 0.3s ease';

          const endX = e.changedTouches[0].clientX;
          const diff = startX - endX;
          const threshold = 50;

          if (Math.abs(diff) > threshold) {
            if (diff > 0 && this.currentSlide < this.maxSlides) {
              this.nextSlide();
            } else if (diff < 0 && this.currentSlide > 0) {
              this.prevSlide();
            } else {
              this.updateSlider();
            }
          } else {
            this.updateSlider();
          }
        }, { passive: true });

        this.slider.addEventListener('mousedown', (e) => {
          if (this.isTouch) return;
          e.preventDefault();
          startX = e.clientX;
          isDragging = true;
          this.slider.style.transition = 'none';
          this.slider.style.cursor = 'grabbing';
        });

        document.addEventListener('mousemove', (e) => {
          if (!isDragging || this.isTouch) return;
          currentX = e.clientX;
          const diff = startX - currentX;
          const currentTransform = -(this.currentSlide * (100 / this.slidesVisible));
          const dragTransform = currentTransform - (diff / this.slider.offsetWidth * 100);
          this.slider.style.transform = `translateX(${dragTransform}%)`;
        });

        document.addEventListener('mouseup', (e) => {
          if (!isDragging || this.isTouch) return;
          isDragging = false;
          this.slider.style.transition = 'transform 0.3s ease';
          this.slider.style.cursor = 'grab';

          const endX = e.clientX;
          const diff = startX - endX;
          const threshold = 50;

          if (Math.abs(diff) > threshold) {
            if (diff > 0 && this.currentSlide < this.maxSlides) {
              this.nextSlide();
            } else if (diff < 0 && this.currentSlide > 0) {
              this.prevSlide();
            } else {
              this.updateSlider();
            }
          } else {
            this.updateSlider();
          }
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateSlider();
        }
      }

      nextSlide() {
        if (this.currentSlide < this.maxSlides) {
          this.currentSlide++;
          this.updateSlider();
        }
      }

      goToSlide(index) {
        this.currentSlide = Math.max(0, Math.min(index, this.maxSlides));
        this.updateSlider();
      }

      updateSlider() {
        const translateX = -(this.currentSlide * (100 / this.slidesVisible));
        this.slider.style.transform = `translateX(${translateX}%)`;

        if (this.prevButton) {
          this.prevButton.disabled = this.currentSlide === 0;
        }
        
        if (this.nextButton) {
          this.nextButton.disabled = this.currentSlide === this.maxSlides;
        }

        if (this.dotsContainer) {
          const dots = this.dotsContainer.querySelectorAll('.ai-brand-features__dot-{{ ai_gen_id }}');
          dots.forEach((dot, index) => {
            dot.classList.toggle('active', index === this.currentSlide);
          });
        }
      }
    }

    customElements.define('brand-features-slider-{{ ai_gen_id }}', BrandFeaturesSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Brand features",
  "settings": [
    {
      "type": "header",
      "content": "Brand description"
    },
    {
      "type": "richtext",
      "id": "description_line_1",
      "label": "Description line 1",
      "default": "<p>Crafting exceptional products with attention to detail and quality that speaks for itself.</p>"
    },
    {
      "type": "font_picker",
      "id": "description_1_font",
      "label": "Description line 1 font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "description_1_font_size",
      "min": 14,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Description line 1 font size",
      "default": 20
    },
    {
      "type": "richtext",
      "id": "description_line_2",
      "label": "Description line 2",
      "default": "<p>Every item is thoughtfully designed to enhance your everyday experience.</p>"
    },
    {
      "type": "font_picker",
      "id": "description_2_font",
      "label": "Description line 2 font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "description_2_font_size",
      "min": 12,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Description line 2 font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "description_spacing",
      "min": 8,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Spacing between descriptions",
      "default": 16
    },
    {
      "type": "header",
      "content": "Animation style"
    },
    {
      "type": "select",
      "id": "animation_style",
      "label": "Text animation",
      "options": [
        {
          "value": "fade_up",
          "label": "Fade up"
        },
        {
          "value": "typewriter",
          "label": "Typewriter"
        },
        {
          "value": "slide_left",
          "label": "Slide from sides"
        },
        {
          "value": "scale",
          "label": "Scale in"
        }
      ],
      "default": "fade_up"
    },
    {
      "type": "header",
      "content": "Section style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "content_spacing",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Content spacing",
      "default": 48
    },
    {
      "type": "header",
      "content": "Icon style"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 50,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "Icon size",
      "default": 80
    },
    {
      "type": "range",
      "id": "icon_spacing",
      "min": 16,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Icon spacing",
      "default": 32
    },
    {
      "type": "range",
      "id": "icon_padding",
      "min": 8,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Icon padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "icon_text_spacing",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Icon text spacing",
      "default": 16
    },
    {
      "type": "color",
      "id": "icon_background_color",
      "label": "Icon background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "icon_border_radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Icon border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "icon_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Icon border width",
      "default": 0
    },
    {
      "type": "color",
      "id": "icon_border_color",
      "label": "Icon border color",
      "default": "#e6e6e6"
    },
    {
      "type": "color",
      "id": "icon_text_color",
      "label": "Icon text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "icon_text_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Icon text size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Mobile slider"
    },
    {
      "type": "select",
      "id": "mobile_slides_visible",
      "label": "Slides visible on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        }
      ],
      "default": "2"
    },
    {
      "type": "select",
      "id": "mobile_navigation",
      "label": "Mobile navigation",
      "options": [
        {
          "value": "arrows",
          "label": "Arrows"
        },
        {
          "value": "dots",
          "label": "Dots"
        }
      ],
      "default": "dots"
    },
    {
      "type": "color",
      "id": "nav_button_background",
      "label": "Navigation button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_border_color",
      "label": "Navigation button border",
      "default": "#e6e6e6"
    },
    {
      "type": "color",
      "id": "nav_button_hover_background",
      "label": "Navigation button hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Icon 1"
    },
    {
      "type": "image_picker",
      "id": "icon_1",
      "label": "Icon image"
    },
    {
      "type": "text",
      "id": "icon_text_1",
      "label": "Icon text",
      "default": "Quality guarantee"
    },
    {
      "type": "header",
      "content": "Icon 2"
    },
    {
      "type": "image_picker",
      "id": "icon_2",
      "label": "Icon image"
    },
    {
      "type": "text",
      "id": "icon_text_2",
      "label": "Icon text",
      "default": "Fast shipping"
    },
    {
      "type": "header",
      "content": "Icon 3"
    },
    {
      "type": "image_picker",
      "id": "icon_3",
      "label": "Icon image"
    },
    {
      "type": "text",
      "id": "icon_text_3",
      "label": "Icon text",
      "default": "Premium quality"
    },
    {
      "type": "header",
      "content": "Icon 4"
    },
    {
      "type": "image_picker",
      "id": "icon_4",
      "label": "Icon image"
    },
    {
      "type": "text",
      "id": "icon_text_4",
      "label": "Icon text",
      "default": "Secure payments"
    },
    {
      "type": "header",
      "content": "Icon 5"
    },
    {
      "type": "image_picker",
      "id": "icon_5",
      "label": "Icon image"
    },
    {
      "type": "text",
      "id": "icon_text_5",
      "label": "Icon text",
      "default": "24/7 support"
    }
  ],
  "presets": [
    {
      "name": "Brand features"
    }
  ],
  "tag": null
}
{% endschema %} {% endcomment %}
 {% comment %}
  Brand features section — full improved version (paste into a new section file or replace existing)
{% endcomment %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
/* ---------- Base / layout ---------- */
.ai-brand-features-{{ ai_gen_id }} {
  padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  background-color: {{ block.settings.background_color }};
  box-sizing: border-box;
  /* protect against stray overflow from children */
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
}

.ai-brand-features__container-{{ ai_gen_id }} {
  max-width: 1200px;
  width: 100%;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

/* ---------- Header / descriptions (centered reliably) ---------- */
.ai-brand-features__header-{{ ai_gen_id }} {
  display: flex;
  flex-direction: column;
  align-items: center;   /* center children horizontally */
  text-align: center;
  gap: 0.25rem;
  margin-bottom: {{ block.settings.content_spacing }}px;
  width: 100%;
  box-sizing: border-box;
}

/* richtext resets + wrapping safety */
.ai-brand-features__description-1-{{ ai_gen_id }},
.ai-brand-features__description-2-{{ ai_gen_id }} {
  color: {{ block.settings.text_color }};
  line-height: 1.45;
  max-width: 800px;
  width: 100%;
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  word-wrap: break-word;
  overflow-wrap: anywhere;
  hyphens: auto;
  white-space: normal;
  text-align: center;
}
.ai-brand-features__description-1-{{ ai_gen_id }} p,
.ai-brand-features__description-2-{{ ai_gen_id }} p { margin: 0; }

.ai-brand-features__description-1-{{ ai_gen_id }} {
  font-size: {{ block.settings.description_1_font_size }}px;
  font-family: {{ block.settings.description_1_font.family }}, {{ block.settings.description_1_font.fallback_families }};
  font-weight: {{ block.settings.description_1_font.weight }};
  font-style: {{ block.settings.description_1_font.style }};
  margin: 0 0 {{ block.settings.description_spacing }}px 0;
  opacity: 0;
  transform: translateY(20px);
  animation: ai-fade-in-up-{{ ai_gen_id }} 0.7s ease-out forwards;
}

.ai-brand-features__description-2-{{ ai_gen_id }} {
  font-size: {{ block.settings.description_2_font_size }}px;
  font-family: {{ block.settings.description_2_font.family }}, {{ block.settings.description_2_font.fallback_families }};
  font-weight: {{ block.settings.description_2_font.weight }};
  font-style: {{ block.settings.description_2_font.style }};
  margin: 0;
  opacity: 0;
  transform: translateY(20px);
  animation: ai-fade-in-up-{{ ai_gen_id }} 0.7s ease-out 0.25s forwards;
}

/* ---------- Icons desktop grid ---------- */
.ai-brand-features__icons-wrapper-{{ ai_gen_id }} {
  position: relative;
  opacity: 0;
  transform: translateY(10px);
  animation: ai-fade-in-up-{{ ai_gen_id }} 0.7s ease-out 0.5s forwards;
}

.ai-brand-features__icons-desktop-{{ ai_gen_id }} {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: {{ block.settings.icon_spacing }}px;
  align-items: start;
  box-sizing: border-box;
}

/* ---------- Mobile slider (safe by default) ---------- */
/* mobile wrapper — no negative margins, prevents overflow */
.ai-brand-features__icons-mobile-{{ ai_gen_id }} {
  display: none;
  position: relative;
  overflow: hidden;
  padding: 0; /* slider will handle inner padding */
  box-sizing: border-box;
}

/* slider track */
.ai-brand-features__slider-{{ ai_gen_id }} {
  display: flex;
  transition: transform 0.35s ease;
  gap: {{ block.settings.icon_spacing }}px;
  will-change: transform;
  touch-action: pan-y;
  padding: 6px 8px;
  box-sizing: border-box;
  width: 100%;
}

/* slide sizing: use flex-basis calc so gaps are accounted for */
.ai-brand-features__slide-{{ ai_gen_id }} {
  box-sizing: border-box;
  min-width: 0; /* critical so flex items can shrink */
  flex: 0 0 calc((100% - ({{ block.settings.icon_spacing }}px * ({{ block.settings.mobile_slides_visible }} - 1))) / {{ block.settings.mobile_slides_visible }});
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 0;
}

/* icon item */
.ai-brand-features__icon-item-{{ ai_gen_id }} {
  text-align: center;
  padding: {{ block.settings.icon_padding }}px;
  box-sizing: border-box;
  max-width: 100%;
}

.ai-brand-features__icon-container-{{ ai_gen_id }} {
  width: {{ block.settings.icon_size }}px;
  height: {{ block.settings.icon_size }}px;
  margin: 0 auto {{ block.settings.icon_text_spacing }}px;
  padding: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: {{ block.settings.icon_background_color }};
  border-radius: {{ block.settings.icon_border_radius }}px;
  border: {{ block.settings.icon_border_width }}px solid {{ block.settings.icon_border_color }};
  overflow: hidden;
  box-sizing: border-box;
}

/* SVG and images constrained */
.ai-brand-features__icon-container-{{ ai_gen_id }} svg,
.ai-brand-features__icon-container-{{ ai_gen_id }} img {
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  display: block;
  object-fit: contain;
}

/* icon text */
.ai-brand-features__icon-text-{{ ai_gen_id }} {
  color: {{ block.settings.icon_text_color }};
  font-size: {{ block.settings.icon_text_size }}px;
  line-height: 1.4;
  font-weight: 500;
  overflow-wrap: anywhere;
  word-break: break-word;
}

/* navigation / dots (mobile) */
.ai-brand-features__navigation-{{ ai_gen_id }} { display: none; justify-content: center; gap: 12px; margin-top: 18px; }
.ai-brand-features__nav-button-{{ ai_gen_id }} { width: 40px; height: 40px; border-radius: 50%; border: 1px solid {{ block.settings.nav_button_border_color }}; background-color: {{ block.settings.nav_button_background }}; color: {{ block.settings.nav_button_color }}; cursor: pointer; display: flex; align-items: center; justify-content: center; transition: all 0.18s ease; }
.ai-brand-features__nav-button-{{ ai_gen_id }}:disabled { opacity: 0.35; cursor: not-allowed; }

  .ai-brand-features__dots-{{ ai_gen_id }} {
    display: none;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-brand-features__dot-{{ ai_gen_id }} {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
    padding: 0;
  }
.ai-brand-features__dot-{{ ai_gen_id }}.active { background: {{ block.settings.dot_active_color }}; transform: scale(1.2); }

/* ---------- Animations ---------- */
@keyframes ai-fade-in-up-{{ ai_gen_id }} { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }

{% if block.settings.animation_style == 'typewriter' %}
  @keyframes ai-typewriter-{{ ai_gen_id }} { from { width: 0; } to { width: 100%; } }
  @keyframes ai-blink-{{ ai_gen_id }} { 0%,50% { border-color: transparent } 51%,100% { border-color: {{ block.settings.text_color }} } }
  .ai-brand-features__description-1-{{ ai_gen_id }} { animation: none; opacity: 1; transform: none; overflow: hidden; white-space: nowrap; width: 0; border-right: 2px solid {{ block.settings.text_color }}; animation: ai-typewriter-{{ ai_gen_id }} 2s steps(40,end) forwards, ai-blink-{{ ai_gen_id }} 1s infinite; }
  .ai-brand-features__description-2-{{ ai_gen_id }} { animation: ai-fade-in-up-{{ ai_gen_id }} 0.6s ease-out 2.2s forwards; }
{% endif %}

/* ---------- Responsive tweaks: prevent overflow ---------- */
@media screen and (max-width: 1024px) {
  .ai-brand-features__icons-desktop-{{ ai_gen_id }} { gap: calc({{ block.settings.icon_spacing }}px * 0.9); }
}

@media screen and (max-width: 749px) {
  .ai-brand-features__container-{{ ai_gen_id }} { padding: 0 16px; }

  .ai-brand-features__description-1-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_1_font_size | times: 0.92 }}px;
    margin-bottom: {{ block.settings.description_spacing | times: 0.8 }}px;
    max-width: 95%;
    padding: 0 6px;
  }
  .ai-brand-features__description-2-{{ ai_gen_id }} {
    font-size: 13px;
    max-width: 95%;
    padding: 0 6px;
  }

  /* enable mobile slider and hide desktop grid */
  .ai-brand-features__icons-desktop-{{ ai_gen_id }} { display: none; }
  .ai-brand-features__icons-mobile-{{ ai_gen_id }} { display: block; }

  {% if block.settings.mobile_navigation == 'arrows' %}
    .ai-brand-features__navigation-{{ ai_gen_id }} { display: flex; }
  {% endif %}
  {% if block.settings.mobile_navigation == 'dots' %}
    .ai-brand-features__dots-{{ ai_gen_id }} { display: flex; }
  {% endif %}

  .ai-brand-features__icon-item-{{ ai_gen_id }} { padding: {{ block.settings.icon_padding | times: 0.75 }}px; }
  .ai-brand-features__icon-container-{{ ai_gen_id }} { width: {{ block.settings.icon_size | times: 0.85 }}px; height: {{ block.settings.icon_size | times: 0.85 }}px; padding: 5px; }

  /* prevent typewriter overflow on small screens */
  {% if block.settings.animation_style == 'typewriter' %}
    .ai-brand-features__description-1-{{ ai_gen_id }} {
      white-space: normal;
      width: auto;
      border-right: none;
      animation: ai-fade-in-up-{{ ai_gen_id }} 0.7s ease-out forwards;
    }
  {% endif %}
}

/* super small screens: reduce gap & padding to avoid calc overflow */
@media screen and (max-width: 420px) {
  .ai-brand-features__slider-{{ ai_gen_id }} { gap: calc({{ block.settings.icon_spacing }}px * 0.6); padding-left: 6px; padding-right: 6px; }
  .ai-brand-features__container-{{ ai_gen_id }} { padding-left: 8px; padding-right: 8px; }
  .ai-brand-features__icon-container-{{ ai_gen_id }} { padding: 6px; max-width: 100%; }
  .ai-brand-features__icon-container-{{ ai_gen_id }} img,
  .ai-brand-features__icon-container-{{ ai_gen_id }} svg { max-width: 100%; height: auto; display: block; }
}

/* extra protections */
.ai-brand-features__description-1-{{ ai_gen_id }},
.ai-brand-features__description-2-{{ ai_gen_id }},
.ai-brand-features__icon-text-{{ ai_gen_id }} {
  word-break: break-word;
  overflow-wrap: anywhere;
  hyphens: auto;
}

/* prefers reduced motion */
@media (prefers-reduced-motion: reduce) {
  .ai-brand-features__description-1-{{ ai_gen_id }}, .ai-brand-features__description-2-{{ ai_gen_id }}, .ai-brand-features__icons-wrapper-{{ ai_gen_id }} { animation: none; opacity: 1; transform: none; }
  {% if block.settings.animation_style == 'typewriter' %}
    .ai-brand-features__description-1-{{ ai_gen_id }} { white-space: normal; width: auto; border-right: none; }
  {% endif %}
}

/* ===== Targeted overflow fixes (paste last in section CSS) ===== */
.ai-brand-features-{{ ai_gen_id }} {
  overflow-x: hidden;            /* hide stray overflow coming from the slider */
  position: relative;            /* keep positioning stable */
  max-width: 100vw;              /* avoid exceeding viewport */
  box-sizing: border-box;
}

/* ensure container and slider never push outside viewport */
.ai-brand-features__container-{{ ai_gen_id }},
.ai-brand-features__icons-mobile-{{ ai_gen_id }},
.ai-brand-features__slider-{{ ai_gen_id }} {
  max-width: 100%;
  box-sizing: border-box;
}

/* prevent flex items from growing beyond the slide width */
.ai-brand-features__slide-{{ ai_gen_id }} {
  min-width: 0 !important;
  box-sizing: border-box;
}

/* reduce any extra slider padding / gap on very small screens (avoid calc overflow) */
@media (max-width: 420px) {
  .ai-brand-features__slider-{{ ai_gen_id }} {
    padding-left: 6px;
    padding-right: 6px;
    gap: calc({{ block.settings.icon_spacing }}px * 0.20);
  }

  .ai-brand-features__container-{{ ai_gen_id }} {
    padding-left: 8px;
    padding-right: 8px;
  }
  .ai-brand-features__description-2-{{ ai_gen_id }}{
    font-size:13px !important;
  }
}

{% endstyle %}

<brand-features-slider-{{ ai_gen_id }} class="ai-brand-features-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-brand-features__container-{{ ai_gen_id }}">
    {% if block.settings.description_line_1 != blank or block.settings.description_line_2 != blank %}
      <div class="ai-brand-features__header-{{ ai_gen_id }}">
        {% if block.settings.description_line_1 != blank %}
          <div class="ai-brand-features__description-1-{{ ai_gen_id }}">{{ block.settings.description_line_1 }}</div>
        {% endif %}
        {% if block.settings.description_line_2 != blank %}
          <div class="ai-brand-features__description-2-{{ ai_gen_id }}">{{ block.settings.description_line_2 }}</div>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-brand-features__icons-wrapper-{{ ai_gen_id }}">
      <!-- Desktop grid (5) -->
      <div class="ai-brand-features__icons-desktop-{{ ai_gen_id }}">
        {% for i in (1..5) %}
          {% liquid
            assign icon_key = 'icon_' | append: i
            assign text_key = 'icon_text_' | append: i
            assign icon_image = block.settings[icon_key]
            assign icon_text = block.settings[text_key]
          %}
          <div class="ai-brand-features__icon-item-{{ ai_gen_id }}">
            <div class="ai-brand-features__icon-container-{{ ai_gen_id }}">
              {% if icon_image %}
                <img src="{{ icon_image | image_url: width: 400 }}" alt="{{ icon_text | escape }}" loading="lazy" />
              {% else %}
                {% case i %}
                  {% when 1 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M9 12l2 2 4-4"/><circle cx="12" cy="12" r="9"/></svg>
                  {% when 2 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/><polyline points="3.27,6.96 12,12.01 20.73,6.96"/><line x1="12" y1="22.08" x2="12" y2="12"/></svg>
                  {% when 3 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>
                  {% when 4 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/></svg>
                  {% when 5 %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="3"/><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"/></svg>
                {% endcase %}
              {% endif %}
            </div>
            {% if icon_text != blank %}
              <div class="ai-brand-features__icon-text-{{ ai_gen_id }}">{{ icon_text }}</div>
            {% endif %}
          </div>
        {% endfor %}
      </div>

      <!-- Mobile slider -->
      <div class="ai-brand-features__icons-mobile-{{ ai_gen_id }}">
        <div class="ai-brand-features__slider-{{ ai_gen_id }}" data-slider>
          {% for i in (1..5) %}
            {% liquid
              assign icon_key = 'icon_' | append: i
              assign text_key = 'icon_text_' | append: i
              assign icon_image = block.settings[icon_key]
              assign icon_text = block.settings[text_key]
            %}
            <div class="ai-brand-features__slide-{{ ai_gen_id }}">
              <div class="ai-brand-features__icon-item-{{ ai_gen_id }}">
                <div class="ai-brand-features__icon-container-{{ ai_gen_id }}">
                  {% if icon_image %}
                    <img src="{{ icon_image | image_url: width: 400 }}" alt="{{ icon_text | escape }}" loading="lazy" />
                  {% else %}
                    {% case i %}
                      {% when 1 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M9 12l2 2 4-4"/><circle cx="12" cy="12" r="9"/></svg>
                      {% when 2 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/><polyline points="3.27,6.96 12,12.01 20.73,6.96"/><line x1="12" y1="22.08" x2="12" y2="12"/></svg>
                      {% when 3 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>
                      {% when 4 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/></svg>
                      {% when 5 %}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="3"/><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"/></svg>
                    {% endcase %}
                  {% endif %}
                </div>

                {% if icon_text != blank %}
                  <div class="ai-brand-features__icon-text-{{ ai_gen_id }}">{{ icon_text }}</div>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        </div>

        {% if block.settings.mobile_navigation == 'arrows' %}
          <div class="ai-brand-features__navigation-{{ ai_gen_id }}">
            <button class="ai-brand-features__nav-button-{{ ai_gen_id }}" data-prev aria-label="Previous slide"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><polyline points="15,18 9,12 15,6"/></svg></button>
            <button class="ai-brand-features__nav-button-{{ ai_gen_id }}" data-next aria-label="Next slide"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"><polyline points="9,18 15,12 9,6"/></svg></button>
          </div>
        {% endif %}
        {% if block.settings.mobile_navigation == 'dots' %}
          <div class="ai-brand-features__dots-{{ ai_gen_id }}" data-dots></div>
        {% endif %}
      </div>
    </div>
  </div>
</brand-features-slider-{{ ai_gen_id }}>

<script>
(function() {
  class BrandFeaturesSlider{{ ai_gen_id }} extends HTMLElement {
    constructor() {
      super();
      this.currentSlide = 0;
      this.slidesVisible = parseInt('{{ block.settings.mobile_slides_visible }}', 10) || 1;
      this.totalSlides = 5;
      this.maxSlides = Math.max(0, this.totalSlides - this.slidesVisible);
      this.isTouch = false;
      this.autoplayEnabled = {{ block.settings.autoplay | default: false }};
      this.autoplaySpeed = parseInt('{{ block.settings.autoplay_speed }}', 10) || 3000;
      this.autoplayTimer = null;
      this.userInteracting = false;
    }

    connectedCallback() {
      this.slider = this.querySelector('[data-slider]');
      if (!this.slider) return;
      this.prevButton = this.querySelector('[data-prev]');
      this.nextButton = this.querySelector('[data-next]');
      this.dotsContainer = this.querySelector('[data-dots]');

      if (this.dotsContainer) this.createDots();
      this.updateSlider();
      this.setupEventListeners();

      if (this.autoplayEnabled) this.startAutoplay();
      // trigger a recalculation after load to ensure correct flex math in previews
      window.requestAnimationFrame(() => { this.onResize(); });
      window.addEventListener('load', () => this.onResize());
      window.addEventListener('resize', () => this.onResize());
    }

    createDots() {
      this.dotsContainer.innerHTML = '';
      for (let i = 0; i <= this.maxSlides; i++) {
        const dot = document.createElement('button');
        dot.className = 'ai-brand-features__dot-{{ ai_gen_id }}';
        dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
        dot.addEventListener('click', () => { this.goToSlide(i); this.pauseAutoplayShort(); });
        this.dotsContainer.appendChild(dot);
      }
    }

    setupEventListeners() {
      if (this.prevButton) this.prevButton.addEventListener('click', () => { this.prevSlide(); this.pauseAutoplayShort(); });
      if (this.nextButton) this.nextButton.addEventListener('click', () => { this.nextSlide(); this.pauseAutoplayShort(); });

      let startX = 0, currentX = 0, isDragging = false;

      this.slider.addEventListener('touchstart', (e) => {
        this.isTouch = true;
        startX = e.touches[0].clientX;
        isDragging = true;
        this.slider.style.transition = 'none';
        this.userInteracting = true;
        this.pauseAutoplayShort();
      }, { passive: true });

      this.slider.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        currentX = e.touches[0].clientX;
        const diff = startX - currentX;
        const currentTransform = -(this.currentSlide * (100 / this.slidesVisible));
        const dragTransform = currentTransform - (diff / this.slider.offsetWidth * 100);
        this.slider.style.transform = `translateX(${dragTransform}%)`;
      }, { passive: true });

      this.slider.addEventListener('touchend', (e) => {
        if (!isDragging) return;
        isDragging = false;
        this.slider.style.transition = 'transform 0.35s ease';
        this.userInteracting = false;
        const endX = e.changedTouches[0].clientX;
        const diff = startX - endX;
        const threshold = 40;
        if (Math.abs(diff) > threshold) {
          if (diff > 0 && this.currentSlide < this.maxSlides) this.nextSlide();
          else if (diff < 0 && this.currentSlide > 0) this.prevSlide();
          else this.updateSlider();
        } else this.updateSlider();
      }, { passive: true });

      // desktop mouse drag fallback
      this.slider.addEventListener('mousedown', (e) => {
        if (this.isTouch) return;
        e.preventDefault();
        startX = e.clientX;
        isDragging = true;
        this.slider.style.transition = 'none';
        this.slider.style.cursor = 'grabbing';
        this.userInteracting = true;
        this.pauseAutoplayShort();
      });

      document.addEventListener('mousemove', (e) => {
        if (!isDragging || this.isTouch) return;
        currentX = e.clientX;
        const diff = startX - currentX;
        const currentTransform = -(this.currentSlide * (100 / this.slidesVisible));
        const dragTransform = currentTransform - (diff / this.slider.offsetWidth * 100);
        this.slider.style.transform = `translateX(${dragTransform}%)`;
      });

      document.addEventListener('mouseup', (e) => {
        if (!isDragging || this.isTouch) return;
        isDragging = false;
        this.slider.style.transition = 'transform 0.35s ease';
        this.slider.style.cursor = 'grab';
        this.userInteracting = false;
        const endX = e.clientX;
        const diff = startX - endX;
        const threshold = 40;
        if (Math.abs(diff) > threshold) {
          if (diff > 0 && this.currentSlide < this.maxSlides) this.nextSlide();
          else if (diff < 0 && this.currentSlide > 0) this.prevSlide();
          else this.updateSlider();
        } else this.updateSlider();
      });

      // pause/resume on hover
      this.addEventListener('mouseenter', () => { this.userInteracting = true; this.pauseAutoplayShort(); });
      this.addEventListener('mouseleave', () => { this.userInteracting = false; if (this.autoplayEnabled) this.startAutoplayDelayed(); });
    }

    onResize() {
      // re-evaluate slidesVisible from settings (if preview changed)
      this.slidesVisible = parseInt('{{ block.settings.mobile_slides_visible }}', 10) || 1;
      this.maxSlides = Math.max(0, this.totalSlides - this.slidesVisible);
      this.currentSlide = Math.min(this.currentSlide, this.maxSlides);

      // recalc CSS flex-basis by forcing reflow (helps some preview environments)
      const slides = this.querySelectorAll('.ai-brand-features__slide-{{ ai_gen_id }}');
      slides.forEach(slide => {
        slide.style.flex = `0 0 calc((100% - ({{ block.settings.icon_spacing }}px * (${this.slidesVisible} - 1))) / ${this.slidesVisible})`;
      });

      this.updateSlider();
    }

    prevSlide() { if (this.currentSlide > 0) { this.currentSlide--; this.updateSlider(); } }
    nextSlide() { if (this.currentSlide < this.maxSlides) { this.currentSlide++; this.updateSlider(); } }
    goToSlide(index) { this.currentSlide = Math.max(0, Math.min(index, this.maxSlides)); this.updateSlider(); }

    updateSlider() {
      const translateX = -(this.currentSlide * (100 / this.slidesVisible));
      this.slider.style.transform = `translateX(${translateX}%)`;
      if (this.prevButton) this.prevButton.disabled = this.currentSlide === 0;
      if (this.nextButton) this.nextButton.disabled = this.currentSlide === this.maxSlides;
      if (this.dotsContainer) {
        const dots = this.dotsContainer.querySelectorAll('.ai-brand-features__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => dot.classList.toggle('active', index === this.currentSlide));
      }
    }

    startAutoplay() {
      if (!this.autoplayEnabled) return;
      this.stopAutoplay();
      this.autoplayTimer = setInterval(() => {
        if (this.userInteracting) return;
        if (this.currentSlide < this.maxSlides) this.currentSlide++; else this.currentSlide = 0;
        this.updateSlider();
      }, this.autoplaySpeed);
    }

    stopAutoplay() { if (this.autoplayTimer) { clearInterval(this.autoplayTimer); this.autoplayTimer = null; } }
    pauseAutoplayShort() { this.stopAutoplay(); if (this.autoplayEnabled) this.startAutoplayDelayed(); }
    startAutoplayDelayed() { this.stopAutoplay(); setTimeout(() => { if (!this.userInteracting && this.autoplayEnabled) this.startAutoplay(); }, 1200); }
  }

  customElements.define('brand-features-slider-{{ ai_gen_id }}', BrandFeaturesSlider{{ ai_gen_id }});
})();
</script>

{% schema %}
{
  "name": "Brand features",
  "settings": [
    { "type": "header", "content": "Brand description" },
    { "type": "richtext", "id": "description_line_1", "label": "Description line 1", "default": "<p>Crafting exceptional products with attention to detail and quality that speaks for itself.</p>" },
    { "type": "font_picker", "id": "description_1_font", "label": "Description line 1 font", "default": "helvetica_n4" },
    { "type": "range", "id": "description_1_font_size", "min": 14, "max": 32, "step": 1, "unit": "px", "label": "Description line 1 font size", "default": 20 },
    { "type": "richtext", "id": "description_line_2", "label": "Description line 2", "default": "<p>Every item is thoughtfully designed to enhance your everyday experience.</p>" },
    { "type": "font_picker", "id": "description_2_font", "label": "Description line 2 font", "default": "helvetica_n4" },
    { "type": "range", "id": "description_2_font_size", "min": 12, "max": 28, "step": 1, "unit": "px", "label": "Description line 2 font size", "default": 16 },
    { "type": "range", "id": "description_spacing", "min": 8, "max": 40, "step": 2, "unit": "px", "label": "Spacing between descriptions", "default": 16 },
    { "type": "header", "content": "Animation style" },
    { "type": "select", "id": "animation_style", "label": "Text animation", "options": [ { "value": "fade_up", "label": "Fade up" }, { "value": "typewriter", "label": "Typewriter" }, { "value": "slide_left", "label": "Slide from sides" }, { "value": "scale", "label": "Scale in" } ], "default": "fade_up" },
    { "type": "header", "content": "Section style" },
    { "type": "color", "id": "background_color", "label": "Background color", "default": "#ffffff" },
    { "type": "color", "id": "text_color", "label": "Text color", "default": "#000000" },
    { "type": "range", "id": "section_padding_top", "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Top padding", "default": 60 },
    { "type": "range", "id": "section_padding_bottom", "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Bottom padding", "default": 60 },
    { "type": "range", "id": "content_spacing", "min": 20, "max": 80, "step": 4, "unit": "px", "label": "Content spacing", "default": 48 },
    { "type": "header", "content": "Icon style" },
    { "type": "range", "id": "icon_size", "min": 50, "max": 120, "step": 5, "unit": "px", "label": "Icon size", "default": 80 },
    { "type": "range", "id": "icon_spacing", "min": 16, "max": 60, "step": 4, "unit": "px", "label": "Icon spacing", "default": 32 },
    { "type": "range", "id": "icon_padding", "min": 8, "max": 40, "step": 2, "unit": "px", "label": "Icon padding", "default": 16 },
    { "type": "range", "id": "icon_text_spacing", "min": 8, "max": 32, "step": 2, "unit": "px", "label": "Icon text spacing", "default": 16 },
    { "type": "color", "id": "icon_background_color", "label": "Icon background color", "default": "#f8f8f8" },
    { "type": "color", "id": "icon_color", "label": "Icon color", "default": "#000000" },
    { "type": "range", "id": "icon_border_radius", "min": 0, "max": 50, "step": 2, "unit": "px", "label": "Icon border radius", "default": 12 },
    { "type": "range", "id": "icon_border_width", "min": 0, "max": 4, "step": 1, "unit": "px", "label": "Icon border width", "default": 0 },
    { "type": "color", "id": "icon_border_color", "label": "Icon border color", "default": "#e6e6e6" },
    { "type": "color", "id": "icon_text_color", "label": "Icon text color", "default": "#000000" },
    { "type": "range", "id": "icon_text_size", "min": 10, "max": 18, "step": 1, "unit": "px", "label": "Icon text size", "default": 14 },
    { "type": "header", "content": "Mobile slider" },
    { "type": "select", "id": "mobile_slides_visible", "label": "Slides visible on mobile", "options": [ { "value": "1", "label": "1" }, { "value": "2", "label": "2" }, { "value": "3", "label": "3" } ], "default": "2" },
    { "type": "select", "id": "mobile_navigation", "label": "Mobile navigation", "options": [ { "value": "arrows", "label": "Arrows" }, { "value": "dots", "label": "Dots" } ], "default": "dots" },
    { "type": "checkbox", "id": "autoplay", "label": "Enable autoplay on mobile slider", "default": true },
    { "type": "range", "id": "autoplay_speed", "label": "Autoplay speed (ms)", "min": 800, "max": 8000, "step": 100, "default": 3000 },
    { "type": "color", "id": "nav_button_background", "label": "Navigation button background", "default": "#ffffff" },
    { "type": "color", "id": "nav_button_color", "label": "Navigation button color", "default": "#000000" },
    { "type": "color", "id": "nav_button_border_color", "label": "Navigation button border", "default": "#e6e6e6" },
    { "type": "color", "id": "nav_button_hover_background", "label": "Navigation button hover background", "default": "#f5f5f5" },
    { "type": "color", "id": "nav_button_hover_color", "label": "Navigation button hover color", "default": "#000000" },
    { "type": "color", "id": "dot_color", "label": "Dot color", "default": "#cccccc" },
    { "type": "color", "id": "dot_active_color", "label": "Active dot color", "default": "#000000" },

    { "type": "header", "content": "Icon 1" },
    { "type": "image_picker", "id": "icon_1", "label": "Icon image" },
    { "type": "text", "id": "icon_text_1", "label": "Icon text", "default": "Quality guarantee" },

    { "type": "header", "content": "Icon 2" },
    { "type": "image_picker", "id": "icon_2", "label": "Icon image" },
    { "type": "text", "id": "icon_text_2", "label": "Icon text", "default": "Fast shipping" },

    { "type": "header", "content": "Icon 3" },
    { "type": "image_picker", "id": "icon_3", "label": "Icon image" },
    { "type": "text", "id": "icon_text_3", "label": "Icon text", "default": "Premium quality" },

    { "type": "header", "content": "Icon 4" },
    { "type": "image_picker", "id": "icon_4", "label": "Icon image" },
    { "type": "text", "id": "icon_text_4", "label": "Icon text", "default": "Secure payments" },

    { "type": "header", "content": "Icon 5" },
    { "type": "image_picker", "id": "icon_5", "label": "Icon image" },
    { "type": "text", "id": "icon_text_5", "label": "Icon text", "default": "24/7 support" }
  ],
  "presets": [ { "name": "Brand features" } ],
  "tag": null
}
{% endschema %}
