{% doc %}
  @prompt
    Make a centered section on a light cream background titled "What's Inside" (large bold serif, deep green) with a subtitle below in smaller sans-serif deep green reading "Just 6 superfoods to support your gut. And yes, that’s it."; include a three-item horizontal carousel of product cards (desktop: three cards side-by-side, evenly spaced and centered; mobile: single card centered with slight peek of adjacent cards) where each card is a square 220–260px image with 24px rounded corners, a 4–6px bright green border and subtle inner shadow, and a bold serif product name in deep green centered below each image; overlay circular navigation arrows (green circle with white arrow) vertically centered to the left and right of the carousel, and place a row of small pagination dots centered beneath the cards with the active dot green and inactive dots light gray; allow full customization of images, alt text, product titles, border color/thickness, corner radius, fonts (serif for titles, sans-serif for subtitle), spacing, and arrow/dot colors; ensure responsive behavior: on desktop show three columns with generous horizontal padding, on tablet show two columns, on mobile show one centered card with touch swipe enabled and arrows/dots easily tappable; include options to adjust image size, card spacing, and typography scale for small screens.
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-whats-inside-section-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px;
    text-align: center;
  }

  .ai-whats-inside-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
  }

  .ai-whats-inside-title-{{ ai_gen_id }} {
    font-family: {{ block.settings.title_font.family }}, serif;
    font-size: {{ block.settings.title_size }}px;
    font-weight: bold;
    color: {{ block.settings.title_color }};
    margin: 0 0 {{ block.settings.title_margin_bottom }}px;
    line-height: 1.2;
  }

  .ai-whats-inside-subtitle-{{ ai_gen_id }} {
    font-family: {{ block.settings.subtitle_font.family }}, sans-serif;
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.subtitle_color }};
    margin: 0 0 {{ block.settings.subtitle_margin_bottom }}px;
    line-height: 1.4;
  }

  .ai-whats-inside-carousel-wrapper-{{ ai_gen_id }} {
    position: relative;
    max-width: 100%;
    margin: 0 auto;
  }

  .ai-whats-inside-carousel-{{ ai_gen_id }} {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    scroll-snap-type: x mandatory;
    gap: {{ block.settings.card_spacing }}px;
    padding: 0 {{ block.settings.desktop_padding }}px;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-whats-inside-carousel-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-whats-inside-card-{{ ai_gen_id }} {
    flex: 0 0 auto;
    scroll-snap-align: center;
    text-align: center;
  }

  .ai-whats-inside-image-wrapper-{{ ai_gen_id }} {
    width: {{ block.settings.image_size }}px;
    height: {{ block.settings.image_size }}px;
    border: {{ block.settings.border_thickness }}px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.corner_radius }}px;
    overflow: hidden;
    margin: 0 auto {{ block.settings.image_margin_bottom }}px;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .ai-whats-inside-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-whats-inside-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-whats-inside-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-whats-inside-product-name-{{ ai_gen_id }} {
    font-family: {{ block.settings.product_name_font.family }}, serif;
    font-size: {{ block.settings.product_name_size }}px;
    font-weight: bold;
    color: {{ block.settings.product_name_color }};
    margin: 0;
    line-height: 1.3;
  }

  .ai-whats-inside-nav-arrow-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: {{ block.settings.arrow_size }}px;
    height: {{ block.settings.arrow_size }}px;
    background-color: {{ block.settings.arrow_background_color }};
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    transition: opacity 0.3s ease, transform 0.2s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .ai-whats-inside-nav-arrow-{{ ai_gen_id }}:hover {
    transform: translateY(-50%) scale(1.1);
  }

  .ai-whats-inside-nav-arrow-{{ ai_gen_id }}:active {
    transform: translateY(-50%) scale(0.95);
  }

  .ai-whats-inside-nav-arrow-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
    fill: {{ block.settings.arrow_icon_color }};
  }

  .ai-whats-inside-nav-arrow--prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-whats-inside-nav-arrow--next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-whats-inside-pagination-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: {{ block.settings.pagination_margin_top }}px;
  }

  .ai-whats-inside-dot-{{ ai_gen_id }} {
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    border-radius: 50%;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    background-color: {{ block.settings.dot_inactive_color }};
  }

  .ai-whats-inside-dot-{{ ai_gen_id }}:hover {
    transform: scale(1.2);
  }

  .ai-whats-inside-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  @media screen and (min-width: 990px) {
    .ai-whats-inside-carousel-{{ ai_gen_id }} {
      justify-content: center;
      overflow: visible;
    }

    .ai-whats-inside-card-{{ ai_gen_id }} {
      flex: 0 0 auto;
    }
  }

  @media screen and (max-width: 989px) and (min-width: 750px) {
    .ai-whats-inside-carousel-{{ ai_gen_id }} {
      padding: 0 {{ block.settings.tablet_padding }}px;
    }

    .ai-whats-inside-card-{{ ai_gen_id }} {
      flex: 0 0 calc(50% - {{ block.settings.card_spacing | divided_by: 2 }}px);
    }

    .ai-whats-inside-image-wrapper-{{ ai_gen_id }} {
      width: {{ block.settings.image_size | times: 0.9 }}px;
      height: {{ block.settings.image_size | times: 0.9 }}px;
    }

    .ai-whats-inside-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.9 }}px;
    }

    .ai-whats-inside-subtitle-{{ ai_gen_id }} {
      font-size: {{ block.settings.subtitle_size | times: 0.9 }}px;
    }

    .ai-whats-inside-product-name-{{ ai_gen_id }} {
      font-size: {{ block.settings.product_name_size | times: 0.9 }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-whats-inside-carousel-{{ ai_gen_id }} {
      padding: 0 {{ block.settings.mobile_padding }}px;
    }

    .ai-whats-inside-card-{{ ai_gen_id }} {
      flex: 0 0 calc(100% - 60px);
      margin: 0 30px;
    }

    .ai-whats-inside-image-wrapper-{{ ai_gen_id }} {
      width: {{ block.settings.image_size | times: 0.8 }}px;
      height: {{ block.settings.image_size | times: 0.8 }}px;
    }

    .ai-whats-inside-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.8 }}px;
    }

    .ai-whats-inside-subtitle-{{ ai_gen_id }} {
      font-size: {{ block.settings.subtitle_size | times: 0.8 }}px;
    }

    .ai-whats-inside-product-name-{{ ai_gen_id }} {
      font-size: {{ block.settings.product_name_size | times: 0.8 }}px;
    }

    .ai-whats-inside-nav-arrow-{{ ai_gen_id }} {
      width: {{ block.settings.arrow_size | times: 1.2 }}px;
      height: {{ block.settings.arrow_size | times: 1.2 }}px;
    }

    .ai-whats-inside-dot-{{ ai_gen_id }} {
      width: {{ block.settings.dot_size | times: 1.2 }}px;
      height: {{ block.settings.dot_size | times: 1.2 }}px;
    }
  }
{% endstyle %}

<whats-inside-carousel-{{ ai_gen_id }}
  class="ai-whats-inside-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-whats-inside-container-{{ ai_gen_id }}">
    {% if block.settings.title != blank %}
      <h2 class="ai-whats-inside-title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
    {% endif %}

    {% if block.settings.subtitle != blank %}
      <p class="ai-whats-inside-subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
    {% endif %}

    <div class="ai-whats-inside-carousel-wrapper-{{ ai_gen_id }}">
      <div class="ai-whats-inside-carousel-{{ ai_gen_id }}" data-carousel>
        {% for i in (1..3) %}
          {% liquid
            assign image_key = 'product_image_' | append: i
            assign alt_key = 'product_alt_' | append: i
            assign name_key = 'product_name_' | append: i
            
            assign product_image = block.settings[image_key]
            assign product_alt = block.settings[alt_key]
            assign product_name = block.settings[name_key]
          %}

          <div class="ai-whats-inside-card-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
            <div class="ai-whats-inside-image-wrapper-{{ ai_gen_id }}">
              {% if product_image %}
                <img
                  src="{{ product_image | image_url: width: 500 }}"
                  alt="{{ product_alt | default: product_name | escape }}"
                  class="ai-whats-inside-image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="500"
                  height="500"
                >
              {% else %}
                <div class="ai-whats-inside-placeholder-{{ ai_gen_id }}">
                  {{ 'product-apparel-1' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>
            {% if product_name != blank %}
              <h3 class="ai-whats-inside-product-name-{{ ai_gen_id }}">{{ product_name }}</h3>
            {% else %}
              <h3 class="ai-whats-inside-product-name-{{ ai_gen_id }}">Product {{ i }}</h3>
            {% endif %}
          </div>
        {% endfor %}
      </div>

      <button
        class="ai-whats-inside-nav-arrow-{{ ai_gen_id }} ai-whats-inside-nav-arrow--prev-{{ ai_gen_id }}"
        data-direction="prev"
        aria-label="Previous product"
      >
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>

      <button
        class="ai-whats-inside-nav-arrow-{{ ai_gen_id }} ai-whats-inside-nav-arrow--next-{{ ai_gen_id }}"
        data-direction="next"
        aria-label="Next product"
      >
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    <div class="ai-whats-inside-pagination-{{ ai_gen_id }}" data-pagination>
      {% for i in (1..3) %}
        <button
          class="ai-whats-inside-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
          data-slide="{{ forloop.index0 }}"
          aria-label="Go to slide {{ forloop.index }}"
        ></button>
      {% endfor %}
    </div>
  </div>
</whats-inside-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class WhatsInsideCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 3;
        this.isDesktop = window.innerWidth >= 990;
      }

      connectedCallback() {
        this.carousel = this.querySelector('[data-carousel]');
        this.prevButton = this.querySelector('[data-direction="prev"]');
        this.nextButton = this.querySelector('[data-direction="next"]');
        this.pagination = this.querySelector('[data-pagination]');
        this.dots = this.querySelectorAll('.ai-whats-inside-dot-{{ ai_gen_id }}');

        this.setupEventListeners();
        this.updateVisibility();
        this.handleResize();
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToSlide(this.currentSlide - 1));
        this.nextButton.addEventListener('click', () => this.goToSlide(this.currentSlide + 1));

        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        this.carousel.addEventListener('scroll', () => this.handleScroll());

        let startX = 0;
        let scrollLeft = 0;

        this.carousel.addEventListener('touchstart', (e) => {
          startX = e.touches[0].pageX;
          scrollLeft = this.carousel.scrollLeft;
        });

        this.carousel.addEventListener('touchmove', (e) => {
          if (!startX) return;
          const x = e.touches[0].pageX;
          const walk = (startX - x) * 2;
          this.carousel.scrollLeft = scrollLeft + walk;
        });

        this.carousel.addEventListener('touchend', () => {
          startX = 0;
          this.snapToNearestSlide();
        });

        window.addEventListener('resize', () => this.handleResize());
      }

      handleResize() {
        const wasDesktop = this.isDesktop;
        this.isDesktop = window.innerWidth >= 990;
        
        if (wasDesktop !== this.isDesktop) {
          this.updateVisibility();
          if (this.isDesktop) {
            this.carousel.scrollLeft = 0;
            this.currentSlide = 0;
            this.updatePagination();
          }
        }
      }

      updateVisibility() {
        if (this.isDesktop) {
          this.prevButton.style.display = 'none';
          this.nextButton.style.display = 'none';
          this.pagination.style.display = 'none';
        } else {
          this.prevButton.style.display = 'flex';
          this.nextButton.style.display = 'flex';
          this.pagination.style.display = 'flex';
        }
      }

      goToSlide(slideIndex) {
        if (this.isDesktop) return;

        this.currentSlide = Math.max(0, Math.min(slideIndex, this.totalSlides - 1));
        
        const slideWidth = this.carousel.scrollWidth / this.totalSlides;
        this.carousel.scrollTo({
          left: slideWidth * this.currentSlide,
          behavior: 'smooth'
        });

        this.updatePagination();
      }

      handleScroll() {
        if (this.isDesktop) return;

        const slideWidth = this.carousel.scrollWidth / this.totalSlides;
        const newSlide = Math.round(this.carousel.scrollLeft / slideWidth);
        
        if (newSlide !== this.currentSlide) {
          this.currentSlide = newSlide;
          this.updatePagination();
        }
      }

      snapToNearestSlide() {
        if (this.isDesktop) return;

        const slideWidth = this.carousel.scrollWidth / this.totalSlides;
        const nearestSlide = Math.round(this.carousel.scrollLeft / slideWidth);
        this.goToSlide(nearestSlide);
      }

      updatePagination() {
        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }
    }

    customElements.define('whats-inside-carousel-{{ ai_gen_id }}', WhatsInsideCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "What's Inside",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "What's Inside"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Just 6 superfoods to support your gut. And yes, that's it."
    },
    {
      "type": "header",
      "content": "Product 1"
    },
    {
      "type": "image_picker",
      "id": "product_image_1",
      "label": "Product image"
    },
    {
      "type": "text",
      "id": "product_alt_1",
      "label": "Image alt text"
    },
    {
      "type": "text",
      "id": "product_name_1",
      "label": "Product name",
      "default": "Superfood 1"
    },
    {
      "type": "header",
      "content": "Product 2"
    },
    {
      "type": "image_picker",
      "id": "product_image_2",
      "label": "Product image"
    },
    {
      "type": "text",
      "id": "product_alt_2",
      "label": "Image alt text"
    },
    {
      "type": "text",
      "id": "product_name_2",
      "label": "Product name",
      "default": "Superfood 2"
    },
    {
      "type": "header",
      "content": "Product 3"
    },
    {
      "type": "image_picker",
      "id": "product_image_3",
      "label": "Product image"
    },
    {
      "type": "text",
      "id": "product_alt_3",
      "label": "Image alt text"
    },
    {
      "type": "text",
      "id": "product_name_3",
      "label": "Product name",
      "default": "Superfood 3"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f9f8f6"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#1a5d3a"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle color",
      "default": "#1a5d3a"
    },
    {
      "type": "color",
      "id": "product_name_color",
      "label": "Product name color",
      "default": "#1a5d3a"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Image border color",
      "default": "#4ade80"
    },
    {
      "type": "color",
      "id": "arrow_background_color",
      "label": "Arrow background color",
      "default": "#1a5d3a"
    },
    {
      "type": "color",
      "id": "arrow_icon_color",
      "label": "Arrow icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#1a5d3a"
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Inactive dot color",
      "default": "#d1d5db"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "font_picker",
      "id": "title_font",
      "label": "Title font",
      "default": "serif"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Title size",
      "min": 24,
      "max": 72,
      "step": 2,
      "unit": "px",
      "default": 48
    },
    {
      "type": "font_picker",
      "id": "subtitle_font",
      "label": "Subtitle font",
      "default": "sans-serif"
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "label": "Subtitle size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "font_picker",
      "id": "product_name_font",
      "label": "Product name font",
      "default": "serif"
    },
    {
      "type": "range",
      "id": "product_name_size",
      "label": "Product name size",
      "min": 14,
      "max": 32,
      "step": 1,
      "unit": "px",
      "default": 18
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "image_size",
      "label": "Image size",
      "min": 180,
      "max": 300,
      "step": 10,
      "unit": "px",
      "default": 240
    },
    {
      "type": "range",
      "id": "border_thickness",
      "label": "Border thickness",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "px",
      "default": 4
    },
    {
      "type": "range",
      "id": "corner_radius",
      "label": "Corner radius",
      "min": 12,
      "max": 40,
      "step": 2,
      "unit": "px",
      "default": 24
    },
    {
      "type": "range",
      "id": "card_spacing",
      "label": "Card spacing",
      "min": 20,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "arrow_size",
      "label": "Arrow size",
      "min": 40,
      "max": 60,
      "step": 2,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "dot_size",
      "label": "Dot size",
      "min": 8,
      "max": 16,
      "step": 1,
      "unit": "px",
      "default": 10
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "label": "Section top padding",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "label": "Section bottom padding",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "title_margin_bottom",
      "label": "Title bottom margin",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "subtitle_margin_bottom",
      "label": "Subtitle bottom margin",
      "min": 20,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "image_margin_bottom",
      "label": "Image bottom margin",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "pagination_margin_top",
      "label": "Pagination top margin",
      "min": 20,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "header",
      "content": "Responsive padding"
    },
    {
      "type": "range",
      "id": "desktop_padding",
      "label": "Desktop horizontal padding",
      "min": 40,
      "max": 120,
      "step": 10,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "tablet_padding",
      "label": "Tablet horizontal padding",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "mobile_padding",
      "label": "Mobile horizontal padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "default": 20
    }
  ],
  "presets": [
    {
      "name": "What's Inside"
    }
  ]
}
{% endschema %}